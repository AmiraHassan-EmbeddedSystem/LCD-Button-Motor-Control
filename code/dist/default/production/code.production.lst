

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 05 08:50:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33   000000                     
    34                           ; Generated 17/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4620 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   0019BE                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _lat_registers
    74   0019BE  89                 	db	137
    75   0019BF  0F                 	db	15
    76   0019C0  8A                 	db	138
    77   0019C1  0F                 	db	15
    78   0019C2  8B                 	db	139
    79   0019C3  0F                 	db	15
    80   0019C4  8C                 	db	140
    81   0019C5  0F                 	db	15
    82   0019C6  8D                 	db	141
    83   0019C7  0F                 	db	15
    84                           
    85                           ;initializer for _port_registers
    86   0019C8  80                 	db	128
    87   0019C9  0F                 	db	15
    88   0019CA  81                 	db	129
    89   0019CB  0F                 	db	15
    90   0019CC  82                 	db	130
    91   0019CD  0F                 	db	15
    92   0019CE  83                 	db	131
    93   0019CF  0F                 	db	15
    94   0019D0  84                 	db	132
    95   0019D1  0F                 	db	15
    96                           
    97                           ;initializer for _tris_registers
    98   0019D2  92                 	db	146
    99   0019D3  0F                 	db	15
   100   0019D4  93                 	db	147
   101   0019D5  0F                 	db	15
   102   0019D6  94                 	db	148
   103   0019D7  0F                 	db	15
   104   0019D8  95                 	db	149
   105   0019D9  0F                 	db	15
   106   0019DA  96                 	db	150
   107   0019DB  0F                 	db	15
   108                           
   109                           ;initializer for _lcd_8bit
   110   0019DC  02                 	db	2
   111   0019DD  0A                 	db	10
   112   0019DE  12                 	db	18
   113   0019DF  1A                 	db	26
   114   0019E0  22                 	db	34
   115   0019E1  2A                 	db	42
   116   0019E2  32                 	db	50
   117   0019E3  3A                 	db	58
   118   0019E4  03                 	db	3
   119   0019E5  0B                 	db	11
   120                           
   121                           ;initializer for _btn
   122   0019E6  1B                 	db	27
   123   0019E7  00                 	db	0
   124   0019E8  01                 	db	1
   125                           
   126                           ;initializer for _relay
   127   0019E9  23                 	db	35
   128   000000                     _LATA	set	3977
   129   000000                     _PORTE	set	3972
   130   000000                     _PORTD	set	3971
   131   000000                     _PORTC	set	3970
   132   000000                     _PORTB	set	3969
   133   000000                     _PORTA	set	3968
   134   000000                     _TRISA	set	3986
   135   000000                     _TRISE	set	3990
   136   000000                     _TRISD	set	3989
   137   000000                     _TRISC	set	3988
   138   000000                     _TRISB	set	3987
   139   000000                     _LATE	set	3981
   140   000000                     _LATD	set	3980
   141   000000                     _LATC	set	3979
   142   000000                     _LATB	set	3978
   143                           
   144                           	psect	smallconst
   145   001000                     __psmallconst:
   146                           	callstack 0
   147   001000  00                 	db	0
   148   001001                     STR_2:
   149   001001  4E                 	db	78	;'N'
   150   001002  6F                 	db	111	;'o'
   151   001003  74                 	db	116	;'t'
   152   001004  20                 	db	32
   153   001005  52                 	db	82	;'R'
   154   001006  75                 	db	117	;'u'
   155   001007  6E                 	db	110	;'n'
   156   001008  6E                 	db	110	;'n'
   157   001009  69                 	db	105	;'i'
   158   00100A  6E                 	db	110	;'n'
   159   00100B  67                 	db	103	;'g'
   160   00100C  00                 	db	0
   161   00100D                     STR_3:
   162   00100D  25                 	db	37
   163   00100E  69                 	db	105	;'i'
   164   00100F  00                 	db	0
   165   001010  00                 	db	0	; dummy byte at the end
   166   000000                     
   167                           ; #config settings
   168                           
   169                           	psect	cinit
   170   001962                     __pcinit:
   171                           	callstack 0
   172   001962                     start_initialization:
   173                           	callstack 0
   174   001962                     __initialization:
   175                           	callstack 0
   176                           
   177                           ; Initialize objects allocated to COMRAM (44 bytes)
   178                           ; load TBLPTR registers with __pidataCOMRAM
   179   001962  0EBE               	movlw	low __pidataCOMRAM
   180   001964  6EF6               	movwf	tblptrl,c
   181   001966  0E19               	movlw	high __pidataCOMRAM
   182   001968  6EF7               	movwf	tblptrh,c
   183   00196A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   184   00196C  6EF8               	movwf	tblptru,c
   185   00196E  EE00  F001         	lfsr	0,__pdataCOMRAM
   186   001972  EE10 F02C          	lfsr	1,44
   187   001976                     copy_data0:
   188   001976  0009               	tblrd		*+
   189   001978  CFF5 FFEE          	movff	tablat,postinc0
   190   00197C  50E5               	movf	postdec1,w,c
   191   00197E  50E1               	movf	fsr1l,w,c
   192   001980  E1FA               	bnz	copy_data0
   193                           
   194                           ; Clear objects allocated to COMRAM (4 bytes)
   195   001982  6A4A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   196   001984  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   197   001986  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   198   001988  6A47               	clrf	__pbssCOMRAM& (0+255),c
   199   00198A                     end_of_initialization:
   200                           	callstack 0
   201   00198A                     __end_of__initialization:
   202                           	callstack 0
   203   00198A  0100               	movlb	0
   204   00198C  EF09  F008         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207   000047                     __pbssCOMRAM:
   208                           	callstack 0
   209   000047                     _counter_debouncing:
   210                           	callstack 0
   211   000047                     	ds	1
   212   000048                     _flag:
   213                           	callstack 0
   214   000048                     	ds	1
   215   000049                     _btn_valid_status:
   216                           	callstack 0
   217   000049                     	ds	1
   218   00004A                     _btn_last_status:
   219                           	callstack 0
   220   00004A                     	ds	1
   221                           
   222                           	psect	dataCOMRAM
   223   000001                     __pdataCOMRAM:
   224                           	callstack 0
   225   000001                     _lat_registers:
   226                           	callstack 0
   227   000001                     	ds	10
   228   00000B                     _port_registers:
   229                           	callstack 0
   230   00000B                     	ds	10
   231   000015                     _tris_registers:
   232                           	callstack 0
   233   000015                     	ds	10
   234   00001F                     _lcd_8bit:
   235                           	callstack 0
   236   00001F                     	ds	10
   237   000029                     _btn:
   238                           	callstack 0
   239   000029                     	ds	3
   240   00002C                     _relay:
   241                           	callstack 0
   242   00002C                     	ds	1
   243                           
   244                           	psect	cstackCOMRAM
   245   00002D                     __pcstackCOMRAM:
   246                           	callstack 0
   247   00002D                     Relay_Config@pin_config:
   248                           	callstack 0
   249   00002D                     gpio_pin_direction_initialize@_pin_config:
   250                           	callstack 0
   251   00002D                     gpio_pin_write_logic@_pin_config:
   252                           	callstack 0
   253   00002D                     gpio_pin_read_logic@_pin_config:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x0
   257   00002D                     	ds	1
   258   00002E                     ??_gpio_pin_direction_initialize:
   259   00002E                     Relay_Config@_relay:
   260                           	callstack 0
   261   00002E                     gpio_pin_write_logic@logic:
   262                           	callstack 0
   263   00002E                     gpio_pin_read_logic@logic:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x1
   267   00002E                     	ds	1
   268   00002F                     ??_gpio_pin_read_logic:
   269   00002F                     ??_Relay_Config:
   270   00002F                     ??_gpio_pin_write_logic:
   271                           
   272                           ; 1 bytes @ 0x2
   273   00002F                     	ds	4
   274   000033                     button_initialize@btn:
   275                           	callstack 0
   276   000033                     button_read_status@btn:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x6
   280   000033                     	ds	1
   281   000034                     button_read_status@btn_status:
   282                           	callstack 0
   283   000034                     Relay_Turn_On@_relay:
   284                           	callstack 0
   285   000034                     Relay_Turn_Off@_relay:
   286                           	callstack 0
   287   000034                     gpio_pin_initialize@_pin_config:
   288                           	callstack 0
   289   000034                     lcd_8bit_enable_signal@_lcd:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x7
   293   000034                     	ds	1
   294   000035                     ??_gpio_pin_initialize:
   295   000035                     Relay_Turn_On@pin_config:
   296                           	callstack 0
   297   000035                     Relay_Turn_Off@pin_config:
   298                           	callstack 0
   299   000035                     lcd_8bit_enable_signal@ret:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x8
   303   000035                     	ds	1
   304   000036                     button_read_status@pin_login_status:
   305                           	callstack 0
   306   000036                     gpio_pin_initialize@ret:
   307                           	callstack 0
   308   000036                     lcd_8bit_send_command@_lcd:
   309                           	callstack 0
   310   000036                     lcd_8bit_send_char@_lcd:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x9
   314   000036                     	ds	1
   315   000037                     Relay_initialize@_relay:
   316                           	callstack 0
   317   000037                     lcd_8bit_send_command@command:
   318                           	callstack 0
   319   000037                     lcd_8bit_send_char@data:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0xA
   323   000037                     	ds	1
   324   000038                     ??_lcd_8bit_send_command:
   325   000038                     ??_lcd_8bit_send_char:
   326   000038                     Relay_initialize@pin_config:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0xB
   330   000038                     	ds	2
   331   00003A                     lcd_8bit_send_command@ret:
   332                           	callstack 0
   333   00003A                     lcd_8bit_send_char@ret:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xD
   337   00003A                     	ds	1
   338   00003B                     lcd_8bit_send_command@count:
   339                           	callstack 0
   340   00003B                     lcd_8bit_send_char@count:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0xE
   344   00003B                     	ds	1
   345   00003C                     lcd_8bit_initialize@_lcd:
   346                           	callstack 0
   347   00003C                     lcd_8bit_send_string@_lcd:
   348                           	callstack 0
   349   00003C                     lcd_8bit_set_cursor@_lcd:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0xF
   353   00003C                     	ds	1
   354   00003D                     ??_lcd_8bit_initialize:
   355   00003D                     lcd_8bit_send_string@str:
   356                           	callstack 0
   357   00003D                     lcd_8bit_set_cursor@row:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x10
   361   00003D                     	ds	1
   362   00003E                     lcd_8bit_send_string@ret:
   363                           	callstack 0
   364   00003E                     lcd_8bit_set_cursor@column:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x11
   368   00003E                     	ds	1
   369   00003F                     lcd_8bit_initialize@count:
   370                           	callstack 0
   371   00003F                     lcd_8bit_set_cursor@ret:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x12
   375   00003F                     	ds	1
   376   000040                     lcd_8bit_initialize@ret:
   377                           	callstack 0
   378   000040                     lcd_8bit_send_string_pos@_lcd:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x13
   382   000040                     	ds	1
   383   000041                     lcd_8bit_send_string_pos@str:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x14
   387   000041                     	ds	1
   388   000042                     lcd_8bit_send_string_pos@row:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x15
   392   000042                     	ds	1
   393   000043                     lcd_8bit_send_string_pos@column:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x16
   397   000043                     	ds	1
   398   000044                     lcd_8bit_send_string_pos@ret:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x17
   402   000044                     	ds	1
   403   000045                     ??_main:
   404                           
   405                           ; 1 bytes @ 0x18
   406   000045                     	ds	2
   407                           
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 20 in file "project.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;Total ram usage:        2 bytes
   432 ;; Hardware stack levels required when called: 6
   433 ;; This function calls:
   434 ;;		_Relay_Turn_Off
   435 ;;		_Relay_Turn_On
   436 ;;		_button_read_status
   437 ;;		_initialization
   438 ;;		_lcd_8bit_send_command
   439 ;;		_lcd_8bit_send_string_pos
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text0
   446   001012                     __ptext0:
   447                           	callstack 0
   448   001012                     _main:
   449                           	callstack 25
   450   001012                     
   451                           ;project.c: 21:     initialization();
   452   001012  EC26  F00D         	call	_initialization	;wreg free
   453   001016                     l201:
   454                           
   455                           ;project.c: 23:         button_read_status(&btn, &btn_last_status);
   456   001016  0E29               	movlw	low _btn
   457   001018  6E33               	movwf	button_read_status@btn^0,c
   458   00101A  0E4A               	movlw	low _btn_last_status
   459   00101C  6E34               	movwf	button_read_status@btn_status^0,c
   460   00101E  ECAB  F00A         	call	_button_read_status	;wreg free
   461   001022                     
   462                           ;project.c: 25:         if(btn_last_status == BUTTON_PRESSED){
   463   001022  044A               	decf	_btn_last_status^0,w,c
   464   001024  A4D8               	btfss	status,2,c
   465   001026  EF17  F008         	goto	u1801
   466   00102A  EF19  F008         	goto	u1800
   467   00102E                     u1801:
   468   00102E  EF1A  F008         	goto	l2399
   469   001032                     u1800:
   470   001032                     
   471                           ;project.c: 26:             counter_debouncing++;
   472   001032  2A47               	incf	_counter_debouncing^0,f,c
   473   001034                     l2399:
   474                           
   475                           ;project.c: 32:         if(btn_valid_status != btn_last_status){
   476   001034  504A               	movf	_btn_last_status^0,w,c
   477   001036  1849               	xorwf	_btn_valid_status^0,w,c
   478   001038  B4D8               	btfsc	status,2,c
   479   00103A  EF21  F008         	goto	u1811
   480   00103E  EF23  F008         	goto	u1810
   481   001042                     u1811:
   482   001042  EF0B  F008         	goto	l201
   483   001046                     u1810:
   484   001046                     
   485                           ;project.c: 33:             btn_valid_status = btn_last_status;
   486   001046  C04A  F049         	movff	_btn_last_status,_btn_valid_status
   487   00104A                     
   488                           ;project.c: 34:             if((btn_valid_status == BUTTON_PRESSED) && (flag == 0)){
   489   00104A  0449               	decf	_btn_valid_status^0,w,c
   490   00104C  A4D8               	btfss	status,2,c
   491   00104E  EF2B  F008         	goto	u1821
   492   001052  EF2D  F008         	goto	u1820
   493   001056                     u1821:
   494   001056  EF77  F008         	goto	l2425
   495   00105A                     u1820:
   496   00105A  5048               	movf	_flag^0,w,c	;volatile
   497   00105C  A4D8               	btfss	status,2,c
   498   00105E  EF33  F008         	goto	u1831
   499   001062  EF35  F008         	goto	u1830
   500   001066                     u1831:
   501   001066  EF77  F008         	goto	l2425
   502   00106A                     u1830:
   503   00106A                     
   504                           ;project.c: 35:                 flag = 1;
   505   00106A  0E01               	movlw	1
   506   00106C  6E48               	movwf	_flag^0,c	;volatile
   507   00106E                     
   508                           ;project.c: 36:                 Relay_Turn_On(&relay);
   509   00106E  0E2C               	movlw	low _relay
   510   001070  6E34               	movwf	Relay_Turn_On@_relay^0,c
   511   001072  EC7F  F00C         	call	_Relay_Turn_On	;wreg free
   512   001076                     
   513                           ;project.c: 37:                 lcd_8bit_send_command(&lcd_8bit, 0x01);
   514   001076  0E1F               	movlw	low _lcd_8bit
   515   001078  6E36               	movwf	lcd_8bit_send_command@_lcd^0,c
   516   00107A  0E01               	movlw	1
   517   00107C  6E37               	movwf	lcd_8bit_send_command@command^0,c
   518   00107E  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   519   001082                     
   520                           ;project.c: 38:                 lcd_8bit_send_command(&lcd_8bit, 0x1C);
   521   001082  0E1F               	movlw	low _lcd_8bit
   522   001084  6E36               	movwf	lcd_8bit_send_command@_lcd^0,c
   523   001086  0E1C               	movlw	28
   524   001088  6E37               	movwf	lcd_8bit_send_command@command^0,c
   525   00108A  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   526   00108E                     
   527                           ;project.c: 39:                 lcd_8bit_send_string_pos(&lcd_8bit, "Running", 1, 6);
   528   00108E  0E1F               	movlw	low _lcd_8bit
   529   001090  6E40               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
   530   001092  0E05               	movlw	low (STR_2+4)
   531   001094  6E41               	movwf	lcd_8bit_send_string_pos@str^0,c
   532   001096  0E01               	movlw	1
   533   001098  6E42               	movwf	lcd_8bit_send_string_pos@row^0,c
   534   00109A  0E06               	movlw	6
   535   00109C  6E43               	movwf	lcd_8bit_send_string_pos@column^0,c
   536   00109E  EC5A  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
   537   0010A2                     l2417:
   538                           
   539                           ;project.c: 40:                 _delay((unsigned long)((15)*(80000000UL/4000.0)));
   540   0010A2  0E02               	movlw	2
   541   0010A4  6E46               	movwf	(??_main+1)^0,c
   542   0010A6  0E86               	movlw	134
   543   0010A8  6E45               	movwf	??_main^0,c
   544   0010AA  0E99               	movlw	153
   545   0010AC                     u1897:
   546   0010AC  2EE8               	decfsz	wreg,f,c
   547   0010AE  D7FE               	bra	u1897
   548   0010B0  2E45               	decfsz	??_main^0,f,c
   549   0010B2  D7FC               	bra	u1897
   550   0010B4  2E46               	decfsz	(??_main+1)^0,f,c
   551   0010B6  D7FA               	bra	u1897
   552   0010B8  0000               	nop	
   553   0010BA                     
   554                           ;project.c: 41:                 lcd_8bit_send_command(&lcd_8bit, 0x08);
   555   0010BA  0E1F               	movlw	low _lcd_8bit
   556   0010BC  6E36               	movwf	lcd_8bit_send_command@_lcd^0,c
   557   0010BE  0E08               	movlw	8
   558   0010C0  6E37               	movwf	lcd_8bit_send_command@command^0,c
   559   0010C2  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   560   0010C6                     
   561                           ;project.c: 42:                 _delay((unsigned long)((15)*(80000000UL/4000.0)));
   562   0010C6  0E02               	movlw	2
   563   0010C8  6E46               	movwf	(??_main+1)^0,c
   564   0010CA  0E86               	movlw	134
   565   0010CC  6E45               	movwf	??_main^0,c
   566   0010CE  0E99               	movlw	153
   567   0010D0                     u1907:
   568   0010D0  2EE8               	decfsz	wreg,f,c
   569   0010D2  D7FE               	bra	u1907
   570   0010D4  2E45               	decfsz	??_main^0,f,c
   571   0010D6  D7FC               	bra	u1907
   572   0010D8  2E46               	decfsz	(??_main+1)^0,f,c
   573   0010DA  D7FA               	bra	u1907
   574   0010DC  0000               	nop	
   575   0010DE                     
   576                           ;project.c: 43:                 lcd_8bit_send_command(&lcd_8bit, 0x0C);
   577   0010DE  0E1F               	movlw	low _lcd_8bit
   578   0010E0  6E36               	movwf	lcd_8bit_send_command@_lcd^0,c
   579   0010E2  0E0C               	movlw	12
   580   0010E4  6E37               	movwf	lcd_8bit_send_command@command^0,c
   581   0010E6  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   582                           
   583                           ;project.c: 44:             }
   584   0010EA  EF0B  F008         	goto	l201
   585   0010EE                     l2425:
   586   0010EE  0449               	decf	_btn_valid_status^0,w,c
   587   0010F0  A4D8               	btfss	status,2,c
   588   0010F2  EF7D  F008         	goto	u1841
   589   0010F6  EF7F  F008         	goto	u1840
   590   0010FA                     u1841:
   591   0010FA  EFA5  F008         	goto	l204
   592   0010FE                     u1840:
   593   0010FE  0448               	decf	_flag^0,w,c	;volatile
   594   001100  A4D8               	btfss	status,2,c
   595   001102  EF85  F008         	goto	u1851
   596   001106  EF87  F008         	goto	u1850
   597   00110A                     u1851:
   598   00110A  EFA5  F008         	goto	l204
   599   00110E                     u1850:
   600   00110E                     
   601                           ;project.c: 47:                 flag = 0;
   602   00110E  0E00               	movlw	0
   603   001110  6E48               	movwf	_flag^0,c	;volatile
   604   001112                     
   605                           ;project.c: 48:                 Relay_Turn_Off(&relay);
   606   001112  0E2C               	movlw	low _relay
   607   001114  6E34               	movwf	Relay_Turn_Off@_relay^0,c
   608   001116  EC98  F00C         	call	_Relay_Turn_Off	;wreg free
   609   00111A                     
   610                           ;project.c: 49:                 lcd_8bit_send_command(&lcd_8bit, 0x01);
   611   00111A  0E1F               	movlw	low _lcd_8bit
   612   00111C  6E36               	movwf	lcd_8bit_send_command@_lcd^0,c
   613   00111E  0E01               	movlw	1
   614   001120  6E37               	movwf	lcd_8bit_send_command@command^0,c
   615   001122  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   616   001126                     
   617                           ;project.c: 50:                 lcd_8bit_send_command(&lcd_8bit, 0x1C);
   618   001126  0E1F               	movlw	low _lcd_8bit
   619   001128  6E36               	movwf	lcd_8bit_send_command@_lcd^0,c
   620   00112A  0E1C               	movlw	28
   621   00112C  6E37               	movwf	lcd_8bit_send_command@command^0,c
   622   00112E  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   623   001132                     
   624                           ;project.c: 51:                 lcd_8bit_send_string_pos(&lcd_8bit, "Not Running", 1, 3)
      +                          ;
   625   001132  0E1F               	movlw	low _lcd_8bit
   626   001134  6E40               	movwf	lcd_8bit_send_string_pos@_lcd^0,c
   627   001136  0E01               	movlw	low STR_2
   628   001138  6E41               	movwf	lcd_8bit_send_string_pos@str^0,c
   629   00113A  0E01               	movlw	1
   630   00113C  6E42               	movwf	lcd_8bit_send_string_pos@row^0,c
   631   00113E  0E03               	movlw	3
   632   001140  6E43               	movwf	lcd_8bit_send_string_pos@column^0,c
   633   001142  EC5A  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
   634   001146  EF51  F008         	goto	l2417
   635   00114A                     l204:
   636   00114A  EF0B  F008         	goto	l201
   637   00114E  EF00  F000         	goto	start
   638   001152                     __end_of_main:
   639                           	callstack 0
   640                           
   641 ;; *************** function _lcd_8bit_send_string_pos *****************
   642 ;; Defined at:
   643 ;;		line 101 in file "ECU/LCD/ecu_lcd.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  _lcd            1   19[COMRAM] PTR const struct .
   646 ;;		 -> lcd_8bit(10), 
   647 ;;  str             1   20[COMRAM] PTR unsigned char 
   648 ;;		 -> STR_2(12), STR_1(8), 
   649 ;;  row             1   21[COMRAM] unsigned char 
   650 ;;  column          1   22[COMRAM] unsigned char 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  ret             1   23[COMRAM] unsigned char 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      unsigned char 
   655 ;; Registers used:
   656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;Total ram usage:        5 bytes
   667 ;; Hardware stack levels used: 1
   668 ;; Hardware stack levels required when called: 4
   669 ;; This function calls:
   670 ;;		_lcd_8bit_send_string
   671 ;;		_lcd_8bit_set_cursor
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text1
   678   0018B4                     __ptext1:
   679                           	callstack 0
   680   0018B4                     _lcd_8bit_send_string_pos:
   681                           	callstack 26
   682   0018B4                     
   683                           ;ECU/LCD/ecu_lcd.c: 101: Std_ReturnType lcd_8bit_send_string_pos(const lcd_8bit_mode *_l
      +                          cd, uint8 *str, uint8 row, uint8 column);ECU/LCD/ecu_lcd.c: 102: {;ECU/LCD/ecu_lcd.c: 10
      +                          3:     Std_ReturnType ret = (Std_ReturnType)1;
   684   0018B4  0E01               	movlw	1
   685   0018B6  6E44               	movwf	lcd_8bit_send_string_pos@ret^0,c
   686                           
   687                           ;ECU/LCD/ecu_lcd.c: 104:     if((((void*)0) == _lcd) && (((void*)0) == str)){
   688   0018B8  5040               	movf	lcd_8bit_send_string_pos@_lcd^0,w,c
   689   0018BA  A4D8               	btfss	status,2,c
   690   0018BC  EF62  F00C         	goto	u1721
   691   0018C0  EF64  F00C         	goto	u1720
   692   0018C4                     u1721:
   693   0018C4  EF6E  F00C         	goto	l2339
   694   0018C8                     u1720:
   695   0018C8  5041               	movf	lcd_8bit_send_string_pos@str^0,w,c
   696   0018CA  A4D8               	btfss	status,2,c
   697   0018CC  EF6A  F00C         	goto	u1731
   698   0018D0  EF6C  F00C         	goto	u1730
   699   0018D4                     u1731:
   700   0018D4  EF6E  F00C         	goto	l2339
   701   0018D8                     u1730:
   702   0018D8                     
   703                           ;ECU/LCD/ecu_lcd.c: 106:     }
   704   0018D8  EF7E  F00C         	goto	l268
   705   0018DC                     l2339:
   706                           
   707                           ;ECU/LCD/ecu_lcd.c: 108:         ret &= lcd_8bit_set_cursor(_lcd, row, column);
   708   0018DC  C040  F03C         	movff	lcd_8bit_send_string_pos@_lcd,lcd_8bit_set_cursor@_lcd
   709   0018E0  C042  F03D         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   710   0018E4  C043  F03E         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
   711   0018E8  ECFF  F00A         	call	_lcd_8bit_set_cursor	;wreg free
   712   0018EC  1644               	andwf	lcd_8bit_send_string_pos@ret^0,f,c
   713   0018EE                     
   714                           ;ECU/LCD/ecu_lcd.c: 109:         ret &= lcd_8bit_send_string(_lcd, str);
   715   0018EE  C040  F03C         	movff	lcd_8bit_send_string_pos@_lcd,lcd_8bit_send_string@_lcd
   716   0018F2  C041  F03D         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
   717   0018F6  ECF4  F00B         	call	_lcd_8bit_send_string	;wreg free
   718   0018FA  1644               	andwf	lcd_8bit_send_string_pos@ret^0,f,c
   719   0018FC                     l268:
   720   0018FC  0012               	return		;funcret
   721   0018FE                     __end_of_lcd_8bit_send_string_pos:
   722                           	callstack 0
   723                           
   724 ;; *************** function _lcd_8bit_set_cursor *****************
   725 ;; Defined at:
   726 ;;		line 184 in file "ECU/LCD/ecu_lcd.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  _lcd            1   15[COMRAM] PTR const struct .
   729 ;;		 -> lcd_8bit(10), 
   730 ;;  row             1   16[COMRAM] unsigned char 
   731 ;;  column          1   17[COMRAM] unsigned char 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  ret             1   18[COMRAM] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      unsigned char 
   736 ;; Registers used:
   737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   743 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;Total ram usage:        4 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 3
   750 ;; This function calls:
   751 ;;		_lcd_8bit_send_command
   752 ;; This function is called by:
   753 ;;		_lcd_8bit_send_string_pos
   754 ;;		_lcd_8bit_send_char_pos
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text2
   759   0015FE                     __ptext2:
   760                           	callstack 0
   761   0015FE                     _lcd_8bit_set_cursor:
   762                           	callstack 26
   763   0015FE                     
   764                           ;ECU/LCD/ecu_lcd.c: 187:     --column;
   765   0015FE  063E               	decf	lcd_8bit_set_cursor@column^0,f,c
   766                           
   767                           ;ECU/LCD/ecu_lcd.c: 188:     switch(row){
   768   001600  EF2E  F00B         	goto	l2255
   769   001604                     l2245:
   770                           
   771                           ;ECU/LCD/ecu_lcd.c: 190:             ret = lcd_8bit_send_command(_lcd, (0x80 + column));
   772   001604  C03C  F036         	movff	lcd_8bit_set_cursor@_lcd,lcd_8bit_send_command@_lcd
   773   001608  503E               	movf	lcd_8bit_set_cursor@column^0,w,c
   774   00160A  0F80               	addlw	128
   775   00160C  6E37               	movwf	lcd_8bit_send_command@command^0,c
   776   00160E  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   777   001612  6E3F               	movwf	lcd_8bit_set_cursor@ret^0,c
   778                           
   779                           ;ECU/LCD/ecu_lcd.c: 191:             break;
   780   001614  EF41  F00B         	goto	l2257
   781   001618                     l2247:
   782                           
   783                           ;ECU/LCD/ecu_lcd.c: 194:             ret = lcd_8bit_send_command(_lcd, (0xC0 + column));
   784   001618  C03C  F036         	movff	lcd_8bit_set_cursor@_lcd,lcd_8bit_send_command@_lcd
   785   00161C  503E               	movf	lcd_8bit_set_cursor@column^0,w,c
   786   00161E  0FC0               	addlw	192
   787   001620  6E37               	movwf	lcd_8bit_send_command@command^0,c
   788   001622  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   789   001626  6E3F               	movwf	lcd_8bit_set_cursor@ret^0,c
   790                           
   791                           ;ECU/LCD/ecu_lcd.c: 195:             break;
   792   001628  EF41  F00B         	goto	l2257
   793   00162C                     l2249:
   794                           
   795                           ;ECU/LCD/ecu_lcd.c: 198:             ret = lcd_8bit_send_command(_lcd, (0x94 + column));
   796   00162C  C03C  F036         	movff	lcd_8bit_set_cursor@_lcd,lcd_8bit_send_command@_lcd
   797   001630  503E               	movf	lcd_8bit_set_cursor@column^0,w,c
   798   001632  0F94               	addlw	148
   799   001634  6E37               	movwf	lcd_8bit_send_command@command^0,c
   800   001636  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   801   00163A  6E3F               	movwf	lcd_8bit_set_cursor@ret^0,c
   802                           
   803                           ;ECU/LCD/ecu_lcd.c: 199:             break;
   804   00163C  EF41  F00B         	goto	l2257
   805   001640                     l2251:
   806                           
   807                           ;ECU/LCD/ecu_lcd.c: 202:             ret = lcd_8bit_send_command(_lcd, (0xD4 + column));
   808   001640  C03C  F036         	movff	lcd_8bit_set_cursor@_lcd,lcd_8bit_send_command@_lcd
   809   001644  503E               	movf	lcd_8bit_set_cursor@column^0,w,c
   810   001646  0FD4               	addlw	212
   811   001648  6E37               	movwf	lcd_8bit_send_command@command^0,c
   812   00164A  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
   813   00164E  6E3F               	movwf	lcd_8bit_set_cursor@ret^0,c
   814                           
   815                           ;ECU/LCD/ecu_lcd.c: 203:             break;
   816   001650  EF41  F00B         	goto	l2257
   817   001654                     l2253:
   818                           
   819                           ;ECU/LCD/ecu_lcd.c: 206:             ret = (Std_ReturnType)1;
   820   001654  0E01               	movlw	1
   821   001656  6E3F               	movwf	lcd_8bit_set_cursor@ret^0,c
   822                           
   823                           ;ECU/LCD/ecu_lcd.c: 207:     }
   824   001658  EF41  F00B         	goto	l2257
   825   00165C                     l2255:
   826   00165C  503D               	movf	lcd_8bit_set_cursor@row^0,w,c
   827                           
   828                           ; Switch size 1, requested type "simple"
   829                           ; Number of cases is 4, Range of values is 1 to 4
   830                           ; switch strategies available:
   831                           ; Name         Instructions Cycles
   832                           ; simple_byte           13     7 (average)
   833                           ;	Chosen strategy is simple_byte
   834   00165E  0A01               	xorlw	1	; case 1
   835   001660  B4D8               	btfsc	status,2,c
   836   001662  EF02  F00B         	goto	l2245
   837   001666  0A03               	xorlw	3	; case 2
   838   001668  B4D8               	btfsc	status,2,c
   839   00166A  EF0C  F00B         	goto	l2247
   840   00166E  0A01               	xorlw	1	; case 3
   841   001670  B4D8               	btfsc	status,2,c
   842   001672  EF16  F00B         	goto	l2249
   843   001676  0A07               	xorlw	7	; case 4
   844   001678  B4D8               	btfsc	status,2,c
   845   00167A  EF20  F00B         	goto	l2251
   846   00167E  EF2A  F00B         	goto	l2253
   847   001682                     l2257:
   848                           
   849                           ;ECU/LCD/ecu_lcd.c: 208:     return ret;
   850   001682  503F               	movf	lcd_8bit_set_cursor@ret^0,w,c
   851   001684  0012               	return		;funcret
   852   001686                     __end_of_lcd_8bit_set_cursor:
   853                           	callstack 0
   854                           
   855 ;; *************** function _lcd_8bit_send_string *****************
   856 ;; Defined at:
   857 ;;		line 86 in file "ECU/LCD/ecu_lcd.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  _lcd            1   15[COMRAM] PTR const struct .
   860 ;;		 -> lcd_8bit(10), 
   861 ;;  str             1   16[COMRAM] PTR unsigned char 
   862 ;;		 -> STR_2(12), STR_1(8), 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  ret             1   17[COMRAM] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      unsigned char 
   867 ;; Registers used:
   868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;Total ram usage:        3 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 3
   881 ;; This function calls:
   882 ;;		_lcd_8bit_send_char
   883 ;; This function is called by:
   884 ;;		_lcd_8bit_send_string_pos
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text3
   889   0017E8                     __ptext3:
   890                           	callstack 0
   891   0017E8                     _lcd_8bit_send_string:
   892                           	callstack 26
   893   0017E8                     
   894                           ;ECU/LCD/ecu_lcd.c: 86: Std_ReturnType lcd_8bit_send_string(const lcd_8bit_mode *_lcd, u
      +                          int8 *str);ECU/LCD/ecu_lcd.c: 87: {;ECU/LCD/ecu_lcd.c: 88:     Std_ReturnType ret = (Std
      +                          _ReturnType)1;
   895   0017E8  0E01               	movlw	1
   896   0017EA  6E3E               	movwf	lcd_8bit_send_string@ret^0,c
   897                           
   898                           ;ECU/LCD/ecu_lcd.c: 89:     if((((void*)0) == _lcd) && (((void*)0) == str)){
   899   0017EC  503C               	movf	lcd_8bit_send_string@_lcd^0,w,c
   900   0017EE  A4D8               	btfss	status,2,c
   901   0017F0  EFFC  F00B         	goto	u1611
   902   0017F4  EFFE  F00B         	goto	u1610
   903   0017F8                     u1611:
   904   0017F8  EF18  F00C         	goto	l2271
   905   0017FC                     u1610:
   906   0017FC  503D               	movf	lcd_8bit_send_string@str^0,w,c
   907   0017FE  A4D8               	btfss	status,2,c
   908   001800  EF04  F00C         	goto	u1621
   909   001804  EF06  F00C         	goto	u1620
   910   001808                     u1621:
   911   001808  EF18  F00C         	goto	l2271
   912   00180C                     u1620:
   913   00180C                     
   914                           ;ECU/LCD/ecu_lcd.c: 90:         ret = (Std_ReturnType)1;
   915   00180C  0E01               	movlw	1
   916   00180E  6E3E               	movwf	lcd_8bit_send_string@ret^0,c
   917                           
   918                           ;ECU/LCD/ecu_lcd.c: 91:     }
   919   001810  EF27  F00C         	goto	l2273
   920   001814                     l2267:
   921                           
   922                           ;ECU/LCD/ecu_lcd.c: 94:             ret &= lcd_8bit_send_char(_lcd, *str++);
   923   001814  C03C  F036         	movff	lcd_8bit_send_string@_lcd,lcd_8bit_send_char@_lcd
   924   001818  C03D  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
   925   00181C                     	if	1	;There is more than 1 active tblptr byte
   926   00181C  0E10               	movlw	high __smallconst
   927   00181E  6EF7               	movwf	tblptrh,c
   928   001820                     	endif
   929   001820                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   930   001820  6AF8               	clrf	tblptru,c
   931   001822                     	endif
   932   001822                     	if	0	;tblptru may be non-zero
   933   001822                     	endif
   934   001822  0008               	tblrd		*
   935   001824  CFF5 F037          	movff	tablat,lcd_8bit_send_char@data
   936   001828  EC80  F00B         	call	_lcd_8bit_send_char	;wreg free
   937   00182C  163E               	andwf	lcd_8bit_send_string@ret^0,f,c
   938   00182E  2A3D               	incf	lcd_8bit_send_string@str^0,f,c
   939   001830                     l2271:
   940                           
   941                           ;ECU/LCD/ecu_lcd.c: 93:         while(*str){
   942   001830  C03D  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
   943   001834                     	if	1	;There is more than 1 active tblptr byte
   944   001834  0E10               	movlw	high __smallconst
   945   001836  6EF7               	movwf	tblptrh,c
   946   001838                     	endif
   947   001838                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   948   001838  6AF8               	clrf	tblptru,c
   949   00183A                     	endif
   950   00183A                     	if	0	;tblptru may be non-zero
   951   00183A                     	endif
   952   00183A  0008               	tblrd		*
   953   00183C  50F5               	movf	tablat,w,c
   954   00183E  0900               	iorlw	0
   955   001840  A4D8               	btfss	status,2,c
   956   001842  EF25  F00C         	goto	u1631
   957   001846  EF27  F00C         	goto	u1630
   958   00184A                     u1631:
   959   00184A  EF0A  F00C         	goto	l2267
   960   00184E                     u1630:
   961   00184E                     l2273:
   962                           
   963                           ;ECU/LCD/ecu_lcd.c: 97:     return ret;
   964   00184E  503E               	movf	lcd_8bit_send_string@ret^0,w,c
   965   001850  0012               	return		;funcret
   966   001852                     __end_of_lcd_8bit_send_string:
   967                           	callstack 0
   968                           
   969 ;; *************** function _lcd_8bit_send_char *****************
   970 ;; Defined at:
   971 ;;		line 55 in file "ECU/LCD/ecu_lcd.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  _lcd            1    9[COMRAM] PTR const struct .
   974 ;;		 -> lcd_8bit(10), 
   975 ;;  data            1   10[COMRAM] unsigned char 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  count           1   14[COMRAM] unsigned char 
   978 ;;  ret             1   13[COMRAM] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      unsigned char 
   981 ;; Registers used:
   982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;Total ram usage:        6 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; Hardware stack levels required when called: 2
   995 ;; This function calls:
   996 ;;		_gpio_pin_write_logic
   997 ;;		_lcd_8bit_enable_signal
   998 ;; This function is called by:
   999 ;;		_lcd_8bit_send_string
  1000 ;;		_lcd_8bit_send_char_pos
  1001 ;;		_lcd_8bit_send_custom_char
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text4
  1006   001700                     __ptext4:
  1007                           	callstack 0
  1008   001700                     _lcd_8bit_send_char:
  1009                           	callstack 26
  1010   001700                     
  1011                           ;ECU/LCD/ecu_lcd.c: 58:     if(((void*)0) == _lcd){
  1012   001700  5036               	movf	lcd_8bit_send_char@_lcd^0,w,c
  1013   001702  A4D8               	btfss	status,2,c
  1014   001704  EF86  F00B         	goto	u1531
  1015   001708  EF88  F00B         	goto	u1530
  1016   00170C                     u1531:
  1017   00170C  EF8C  F00B         	goto	l2201
  1018   001710                     u1530:
  1019   001710                     
  1020                           ;ECU/LCD/ecu_lcd.c: 59:         ret = (Std_ReturnType)1;
  1021   001710  0E01               	movlw	1
  1022   001712  6E3A               	movwf	lcd_8bit_send_char@ret^0,c
  1023                           
  1024                           ;ECU/LCD/ecu_lcd.c: 60:     }
  1025   001714  EFB8  F00B         	goto	l2217
  1026   001718                     l2201:
  1027                           
  1028                           ;ECU/LCD/ecu_lcd.c: 62:         ret = gpio_pin_write_logic(&(_lcd->rs), GPIO_HIGH);
  1029   001718  C036  F02D         	movff	lcd_8bit_send_char@_lcd,gpio_pin_write_logic@_pin_config
  1030   00171C  0E01               	movlw	1
  1031   00171E  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1032   001720  EC3C  F009         	call	_gpio_pin_write_logic	;wreg free
  1033   001724  6E3A               	movwf	lcd_8bit_send_char@ret^0,c
  1034   001726                     
  1035                           ;ECU/LCD/ecu_lcd.c: 63:         for(uint8 count=0; count<8; count++){
  1036   001726  0E00               	movlw	0
  1037   001728  6E3B               	movwf	lcd_8bit_send_char@count^0,c
  1038   00172A                     l2209:
  1039                           
  1040                           ;ECU/LCD/ecu_lcd.c: 64:             ret &= gpio_pin_write_logic(&(_lcd->data[count]), (d
      +                          ata >> count) & 0x01);
  1041   00172A  5036               	movf	lcd_8bit_send_char@_lcd^0,w,c
  1042   00172C  243B               	addwf	lcd_8bit_send_char@count^0,w,c
  1043   00172E  0F02               	addlw	2
  1044   001730  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1045   001732  C03B  F038         	movff	lcd_8bit_send_char@count,??_lcd_8bit_send_char
  1046   001736  C037  F039         	movff	lcd_8bit_send_char@data,??_lcd_8bit_send_char+1
  1047   00173A  2A38               	incf	??_lcd_8bit_send_char^0,f,c
  1048   00173C  EFA2  F00B         	goto	u1544
  1049   001740                     u1545:
  1050   001740  90D8               	bcf	status,0,c
  1051   001742  3239               	rrcf	(??_lcd_8bit_send_char+1)^0,f,c
  1052   001744                     u1544:
  1053   001744  2E38               	decfsz	??_lcd_8bit_send_char^0,f,c
  1054   001746  EFA0  F00B         	goto	u1545
  1055   00174A  5039               	movf	(??_lcd_8bit_send_char+1)^0,w,c
  1056   00174C  0B01               	andlw	1
  1057   00174E  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1058   001750  EC3C  F009         	call	_gpio_pin_write_logic	;wreg free
  1059   001754  163A               	andwf	lcd_8bit_send_char@ret^0,f,c
  1060   001756                     
  1061                           ;ECU/LCD/ecu_lcd.c: 65:         }
  1062   001756  2A3B               	incf	lcd_8bit_send_char@count^0,f,c
  1063   001758  0E07               	movlw	7
  1064   00175A  643B               	cpfsgt	lcd_8bit_send_char@count^0,c
  1065   00175C  EFB2  F00B         	goto	u1551
  1066   001760  EFB4  F00B         	goto	u1550
  1067   001764                     u1551:
  1068   001764  EF95  F00B         	goto	l2209
  1069   001768                     u1550:
  1070   001768                     
  1071                           ;ECU/LCD/ecu_lcd.c: 66:         lcd_8bit_enable_signal(_lcd);
  1072   001768  C036  F034         	movff	lcd_8bit_send_char@_lcd,lcd_8bit_enable_signal@_lcd
  1073   00176C  ECF5  F00C         	call	_lcd_8bit_enable_signal	;wreg free
  1074   001770                     l2217:
  1075                           
  1076                           ;ECU/LCD/ecu_lcd.c: 68:     return ret;
  1077   001770  503A               	movf	lcd_8bit_send_char@ret^0,w,c
  1078   001772  0012               	return		;funcret
  1079   001774                     __end_of_lcd_8bit_send_char:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _initialization *****************
  1083 ;; Defined at:
  1084 ;;		line 63 in file "project.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 5
  1105 ;; This function calls:
  1106 ;;		_ecu_initialization
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text5
  1113   001A4C                     __ptext5:
  1114                           	callstack 0
  1115   001A4C                     _initialization:
  1116                           	callstack 25
  1117   001A4C                     
  1118                           ;project.c: 64:     ecu_initialization();
  1119   001A4C  EC19  F00D         	call	_ecu_initialization	;wreg free
  1120   001A50  0012               	return		;funcret
  1121   001A52                     __end_of_initialization:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _ecu_initialization *****************
  1125 ;; Defined at:
  1126 ;;		line 73 in file "ECU/ecu_initialize.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 4
  1147 ;; This function calls:
  1148 ;;		_Relay_initialize
  1149 ;;		_button_initialize
  1150 ;;		_lcd_8bit_initialize
  1151 ;; This function is called by:
  1152 ;;		_initialization
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text6
  1157   001A32                     __ptext6:
  1158                           	callstack 0
  1159   001A32                     _ecu_initialization:
  1160                           	callstack 25
  1161   001A32                     
  1162                           ;ECU/ecu_initialize.c: 75:     lcd_8bit_initialize(&lcd_8bit);
  1163   001A32  0E1F               	movlw	low _lcd_8bit
  1164   001A34  6E3C               	movwf	lcd_8bit_initialize@_lcd^0,c
  1165   001A36  ECCE  F009         	call	_lcd_8bit_initialize	;wreg free
  1166                           
  1167                           ;ECU/ecu_initialize.c: 76:     button_initialize(&btn);
  1168   001A3A  0E29               	movlw	low _btn
  1169   001A3C  6E33               	movwf	button_initialize@btn^0,c
  1170   001A3E  EC0A  F00D         	call	_button_initialize	;wreg free
  1171   001A42                     
  1172                           ;ECU/ecu_initialize.c: 77:     Relay_initialize(&relay);
  1173   001A42  0E2C               	movlw	low _relay
  1174   001A44  6E37               	movwf	Relay_initialize@_relay^0,c
  1175   001A46  ECC8  F00C         	call	_Relay_initialize	;wreg free
  1176   001A4A  0012               	return		;funcret
  1177   001A4C                     __end_of_ecu_initialization:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _lcd_8bit_initialize *****************
  1181 ;; Defined at:
  1182 ;;		line 7 in file "ECU/LCD/ecu_lcd.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  _lcd            1   15[COMRAM] PTR const struct .
  1185 ;;		 -> lcd_8bit(10), 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  count           1   18[COMRAM] unsigned char 
  1188 ;;  ret             1   19[COMRAM] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      unsigned char 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1198 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;Total ram usage:        5 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 3
  1205 ;; This function calls:
  1206 ;;		_gpio_pin_initialize
  1207 ;;		_lcd_8bit_send_command
  1208 ;; This function is called by:
  1209 ;;		_ecu_initialization
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text7
  1214   00139C                     __ptext7:
  1215                           	callstack 0
  1216   00139C                     _lcd_8bit_initialize:
  1217                           	callstack 25
  1218   00139C                     
  1219                           ;ECU/LCD/ecu_lcd.c: 10:     if(((void*)0) == _lcd){
  1220   00139C  503C               	movf	lcd_8bit_initialize@_lcd^0,w,c
  1221   00139E  A4D8               	btfss	status,2,c
  1222   0013A0  EFD4  F009         	goto	u1511
  1223   0013A4  EFD6  F009         	goto	u1510
  1224   0013A8                     u1511:
  1225   0013A8  EFD8  F009         	goto	l2159
  1226   0013AC                     u1510:
  1227   0013AC                     
  1228                           ;ECU/LCD/ecu_lcd.c: 12:     }
  1229   0013AC  EF4E  F00A         	goto	l236
  1230   0013B0                     l2159:
  1231                           
  1232                           ;ECU/LCD/ecu_lcd.c: 14:         ret = gpio_pin_initialize(&(_lcd->rs));
  1233   0013B0  C03C  F034         	movff	lcd_8bit_initialize@_lcd,gpio_pin_initialize@_pin_config
  1234   0013B4  EC43  F00B         	call	_gpio_pin_initialize	;wreg free
  1235   0013B8  6E40               	movwf	lcd_8bit_initialize@ret^0,c
  1236                           
  1237                           ;ECU/LCD/ecu_lcd.c: 15:         ret &= gpio_pin_initialize(&(_lcd->en));
  1238   0013BA  283C               	incf	lcd_8bit_initialize@_lcd^0,w,c
  1239   0013BC  6E34               	movwf	gpio_pin_initialize@_pin_config^0,c
  1240   0013BE  EC43  F00B         	call	_gpio_pin_initialize	;wreg free
  1241   0013C2  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1242   0013C4                     
  1243                           ;ECU/LCD/ecu_lcd.c: 16:         for(uint8 count=0; count<8; count++){
  1244   0013C4  0E00               	movlw	0
  1245   0013C6  6E3F               	movwf	lcd_8bit_initialize@count^0,c
  1246   0013C8                     l2167:
  1247                           
  1248                           ;ECU/LCD/ecu_lcd.c: 17:             ret &= gpio_pin_initialize(&(_lcd->data[count]));
  1249   0013C8  503C               	movf	lcd_8bit_initialize@_lcd^0,w,c
  1250   0013CA  243F               	addwf	lcd_8bit_initialize@count^0,w,c
  1251   0013CC  0F02               	addlw	2
  1252   0013CE  6E34               	movwf	gpio_pin_initialize@_pin_config^0,c
  1253   0013D0  EC43  F00B         	call	_gpio_pin_initialize	;wreg free
  1254   0013D4  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1255   0013D6                     
  1256                           ;ECU/LCD/ecu_lcd.c: 18:         }
  1257   0013D6  2A3F               	incf	lcd_8bit_initialize@count^0,f,c
  1258   0013D8  0E07               	movlw	7
  1259   0013DA  643F               	cpfsgt	lcd_8bit_initialize@count^0,c
  1260   0013DC  EFF2  F009         	goto	u1521
  1261   0013E0  EFF4  F009         	goto	u1520
  1262   0013E4                     u1521:
  1263   0013E4  EFE4  F009         	goto	l2167
  1264   0013E8                     u1520:
  1265   0013E8                     
  1266                           ;ECU/LCD/ecu_lcd.c: 20:         _delay((unsigned long)((20)*(80000000UL/4000.0)));
  1267   0013E8  0E03               	movlw	3
  1268   0013EA  6E3E               	movwf	(??_lcd_8bit_initialize+1)^0,c
  1269   0013EC  0E08               	movlw	8
  1270   0013EE  6E3D               	movwf	??_lcd_8bit_initialize^0,c
  1271   0013F0  0E77               	movlw	119
  1272   0013F2                     u1917:
  1273   0013F2  2EE8               	decfsz	wreg,f,c
  1274   0013F4  D7FE               	bra	u1917
  1275   0013F6  2E3D               	decfsz	??_lcd_8bit_initialize^0,f,c
  1276   0013F8  D7FC               	bra	u1917
  1277   0013FA  2E3E               	decfsz	(??_lcd_8bit_initialize+1)^0,f,c
  1278   0013FC  D7FA               	bra	u1917
  1279   0013FE  0000               	nop	
  1280   001400                     
  1281                           ;ECU/LCD/ecu_lcd.c: 21:         ret &= lcd_8bit_send_command(_lcd, 0x38);
  1282   001400  C03C  F036         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  1283   001404  0E38               	movlw	56
  1284   001406  6E37               	movwf	lcd_8bit_send_command@command^0,c
  1285   001408  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
  1286   00140C  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1287   00140E                     
  1288                           ;ECU/LCD/ecu_lcd.c: 22:         _delay((unsigned long)((5)*(80000000UL/4000.0)));
  1289   00140E  0E82               	movlw	130
  1290   001410  6E3D               	movwf	??_lcd_8bit_initialize^0,c
  1291   001412  0EDE               	movlw	222
  1292   001414                     u1927:
  1293   001414  2EE8               	decfsz	wreg,f,c
  1294   001416  D7FE               	bra	u1927
  1295   001418  2E3D               	decfsz	??_lcd_8bit_initialize^0,f,c
  1296   00141A  D7FC               	bra	u1927
  1297                           
  1298                           ;ECU/LCD/ecu_lcd.c: 23:         ret &= lcd_8bit_send_command(_lcd, 0x38);
  1299   00141C  C03C  F036         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  1300   001420  0E38               	movlw	56
  1301   001422  6E37               	movwf	lcd_8bit_send_command@command^0,c
  1302   001424  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
  1303   001428  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1304   00142A                     
  1305                           ;ECU/LCD/ecu_lcd.c: 24:         _delay((unsigned long)((150)*(80000000UL/4000000.0)));
  1306   00142A  0E04               	movlw	4
  1307   00142C  6E3D               	movwf	??_lcd_8bit_initialize^0,c
  1308   00142E  0EE4               	movlw	228
  1309   001430                     u1937:
  1310   001430  2EE8               	decfsz	wreg,f,c
  1311   001432  D7FE               	bra	u1937
  1312   001434  2E3D               	decfsz	??_lcd_8bit_initialize^0,f,c
  1313   001436  D7FC               	bra	u1937
  1314   001438  D000               	nop2	
  1315   00143A                     
  1316                           ;ECU/LCD/ecu_lcd.c: 25:         ret &= lcd_8bit_send_command(_lcd, 0x38);
  1317   00143A  C03C  F036         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  1318   00143E  0E38               	movlw	56
  1319   001440  6E37               	movwf	lcd_8bit_send_command@command^0,c
  1320   001442  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
  1321   001446  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1322   001448                     
  1323                           ;ECU/LCD/ecu_lcd.c: 27:         ret &= lcd_8bit_send_command(_lcd, 0x01);
  1324   001448  C03C  F036         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  1325   00144C  0E01               	movlw	1
  1326   00144E  6E37               	movwf	lcd_8bit_send_command@command^0,c
  1327   001450  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
  1328   001454  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1329   001456                     
  1330                           ;ECU/LCD/ecu_lcd.c: 28:         ret &= lcd_8bit_send_command(_lcd, 0x02);
  1331   001456  C03C  F036         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  1332   00145A  0E02               	movlw	2
  1333   00145C  6E37               	movwf	lcd_8bit_send_command@command^0,c
  1334   00145E  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
  1335   001462  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1336   001464                     
  1337                           ;ECU/LCD/ecu_lcd.c: 29:         ret &= lcd_8bit_send_command(_lcd, 0x06);
  1338   001464  C03C  F036         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  1339   001468  0E06               	movlw	6
  1340   00146A  6E37               	movwf	lcd_8bit_send_command@command^0,c
  1341   00146C  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
  1342   001470  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1343   001472                     
  1344                           ;ECU/LCD/ecu_lcd.c: 30:         ret &= lcd_8bit_send_command(_lcd, 0x0C);
  1345   001472  C03C  F036         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  1346   001476  0E0C               	movlw	12
  1347   001478  6E37               	movwf	lcd_8bit_send_command@command^0,c
  1348   00147A  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
  1349   00147E  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1350   001480                     
  1351                           ;ECU/LCD/ecu_lcd.c: 31:         ret &= lcd_8bit_send_command(_lcd, 0x38);
  1352   001480  C03C  F036         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  1353   001484  0E38               	movlw	56
  1354   001486  6E37               	movwf	lcd_8bit_send_command@command^0,c
  1355   001488  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
  1356   00148C  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1357   00148E                     
  1358                           ;ECU/LCD/ecu_lcd.c: 32:         ret &= lcd_8bit_send_command(_lcd, 0x80);
  1359   00148E  C03C  F036         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
  1360   001492  0E80               	movlw	128
  1361   001494  6E37               	movwf	lcd_8bit_send_command@command^0,c
  1362   001496  ECBA  F00B         	call	_lcd_8bit_send_command	;wreg free
  1363   00149A  1640               	andwf	lcd_8bit_initialize@ret^0,f,c
  1364   00149C                     l236:
  1365   00149C  0012               	return		;funcret
  1366   00149E                     __end_of_lcd_8bit_initialize:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _lcd_8bit_send_command *****************
  1370 ;; Defined at:
  1371 ;;		line 38 in file "ECU/LCD/ecu_lcd.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  _lcd            1    9[COMRAM] PTR const struct .
  1374 ;;		 -> lcd_8bit(10), 
  1375 ;;  command         1   10[COMRAM] unsigned char 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  count           1   14[COMRAM] unsigned char 
  1378 ;;  ret             1   13[COMRAM] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      unsigned char 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;Total ram usage:        6 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 2
  1395 ;; This function calls:
  1396 ;;		_gpio_pin_write_logic
  1397 ;;		_lcd_8bit_enable_signal
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;;		_lcd_8bit_initialize
  1401 ;;		_lcd_8bit_set_cursor
  1402 ;;		_lcd_8bit_send_custom_char
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text8
  1407   001774                     __ptext8:
  1408                           	callstack 0
  1409   001774                     _lcd_8bit_send_command:
  1410                           	callstack 26
  1411   001774                     
  1412                           ;ECU/LCD/ecu_lcd.c: 41:     if(((void*)0) == _lcd){
  1413   001774  5036               	movf	lcd_8bit_send_command@_lcd^0,w,c
  1414   001776  A4D8               	btfss	status,2,c
  1415   001778  EFC0  F00B         	goto	u1461
  1416   00177C  EFC2  F00B         	goto	u1460
  1417   001780                     u1461:
  1418   001780  EFC6  F00B         	goto	l2115
  1419   001784                     u1460:
  1420   001784                     
  1421                           ;ECU/LCD/ecu_lcd.c: 42:         ret = (Std_ReturnType)1;
  1422   001784  0E01               	movlw	1
  1423   001786  6E3A               	movwf	lcd_8bit_send_command@ret^0,c
  1424                           
  1425                           ;ECU/LCD/ecu_lcd.c: 43:     }
  1426   001788  EFF2  F00B         	goto	l2131
  1427   00178C                     l2115:
  1428                           
  1429                           ;ECU/LCD/ecu_lcd.c: 45:         ret = gpio_pin_write_logic(&(_lcd->rs), GPIO_LOW);
  1430   00178C  C036  F02D         	movff	lcd_8bit_send_command@_lcd,gpio_pin_write_logic@_pin_config
  1431   001790  0E00               	movlw	0
  1432   001792  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1433   001794  EC3C  F009         	call	_gpio_pin_write_logic	;wreg free
  1434   001798  6E3A               	movwf	lcd_8bit_send_command@ret^0,c
  1435   00179A                     
  1436                           ;ECU/LCD/ecu_lcd.c: 46:         for(uint8 count=0; count<8; count++){
  1437   00179A  0E00               	movlw	0
  1438   00179C  6E3B               	movwf	lcd_8bit_send_command@count^0,c
  1439   00179E                     l2123:
  1440                           
  1441                           ;ECU/LCD/ecu_lcd.c: 47:             ret &= gpio_pin_write_logic(&(_lcd->data[count]), (c
      +                          ommand >> count) & 0x01);
  1442   00179E  5036               	movf	lcd_8bit_send_command@_lcd^0,w,c
  1443   0017A0  243B               	addwf	lcd_8bit_send_command@count^0,w,c
  1444   0017A2  0F02               	addlw	2
  1445   0017A4  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1446   0017A6  C03B  F038         	movff	lcd_8bit_send_command@count,??_lcd_8bit_send_command
  1447   0017AA  C037  F039         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1448   0017AE  2A38               	incf	??_lcd_8bit_send_command^0,f,c
  1449   0017B0  EFDC  F00B         	goto	u1474
  1450   0017B4                     u1475:
  1451   0017B4  90D8               	bcf	status,0,c
  1452   0017B6  3239               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1453   0017B8                     u1474:
  1454   0017B8  2E38               	decfsz	??_lcd_8bit_send_command^0,f,c
  1455   0017BA  EFDA  F00B         	goto	u1475
  1456   0017BE  5039               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1457   0017C0  0B01               	andlw	1
  1458   0017C2  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1459   0017C4  EC3C  F009         	call	_gpio_pin_write_logic	;wreg free
  1460   0017C8  163A               	andwf	lcd_8bit_send_command@ret^0,f,c
  1461   0017CA                     
  1462                           ;ECU/LCD/ecu_lcd.c: 48:         }
  1463   0017CA  2A3B               	incf	lcd_8bit_send_command@count^0,f,c
  1464   0017CC  0E07               	movlw	7
  1465   0017CE  643B               	cpfsgt	lcd_8bit_send_command@count^0,c
  1466   0017D0  EFEC  F00B         	goto	u1481
  1467   0017D4  EFEE  F00B         	goto	u1480
  1468   0017D8                     u1481:
  1469   0017D8  EFCF  F00B         	goto	l2123
  1470   0017DC                     u1480:
  1471   0017DC                     
  1472                           ;ECU/LCD/ecu_lcd.c: 49:         lcd_8bit_enable_signal(_lcd);
  1473   0017DC  C036  F034         	movff	lcd_8bit_send_command@_lcd,lcd_8bit_enable_signal@_lcd
  1474   0017E0  ECF5  F00C         	call	_lcd_8bit_enable_signal	;wreg free
  1475   0017E4                     l2131:
  1476                           
  1477                           ;ECU/LCD/ecu_lcd.c: 51:     return ret;
  1478   0017E4  503A               	movf	lcd_8bit_send_command@ret^0,w,c
  1479   0017E6  0012               	return		;funcret
  1480   0017E8                     __end_of_lcd_8bit_send_command:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _lcd_8bit_enable_signal *****************
  1484 ;; Defined at:
  1485 ;;		line 175 in file "ECU/LCD/ecu_lcd.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  _lcd            1    7[COMRAM] PTR const struct .
  1488 ;;		 -> lcd_8bit(10), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  ret             1    8[COMRAM] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      unsigned char 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        2 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 1
  1507 ;; This function calls:
  1508 ;;		_gpio_pin_write_logic
  1509 ;; This function is called by:
  1510 ;;		_lcd_8bit_send_command
  1511 ;;		_lcd_8bit_send_char
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text9
  1516   0019EA                     __ptext9:
  1517                           	callstack 0
  1518   0019EA                     _lcd_8bit_enable_signal:
  1519                           	callstack 26
  1520   0019EA                     
  1521                           ;ECU/LCD/ecu_lcd.c: 175: static Std_ReturnType lcd_8bit_enable_signal(const lcd_8bit_mod
      +                          e *_lcd);ECU/LCD/ecu_lcd.c: 176: {;ECU/LCD/ecu_lcd.c: 177:     Std_ReturnType ret = (Std
      +                          _ReturnType)1;
  1522   0019EA  0E01               	movlw	1
  1523   0019EC  6E35               	movwf	lcd_8bit_enable_signal@ret^0,c
  1524   0019EE                     
  1525                           ;ECU/LCD/ecu_lcd.c: 178:     ret &= gpio_pin_write_logic(&(_lcd->en), GPIO_HIGH);
  1526   0019EE  2834               	incf	lcd_8bit_enable_signal@_lcd^0,w,c
  1527   0019F0  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1528   0019F2  0E01               	movlw	1
  1529   0019F4  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1530   0019F6  EC3C  F009         	call	_gpio_pin_write_logic	;wreg free
  1531   0019FA  1635               	andwf	lcd_8bit_enable_signal@ret^0,f,c
  1532   0019FC                     
  1533                           ;ECU/LCD/ecu_lcd.c: 179:     _delay((unsigned long)((5)*(80000000UL/4000000.0)));
  1534   0019FC  0E21               	movlw	33
  1535   0019FE                     u1947:
  1536   0019FE  2EE8               	decfsz	wreg,f,c
  1537   001A00  D7FE               	bra	u1947
  1538   001A02  0000               	nop	
  1539   001A04                     
  1540                           ;ECU/LCD/ecu_lcd.c: 180:     ret &= gpio_pin_write_logic(&(_lcd->en), GPIO_LOW);
  1541   001A04  2834               	incf	lcd_8bit_enable_signal@_lcd^0,w,c
  1542   001A06  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1543   001A08  0E00               	movlw	0
  1544   001A0A  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1545   001A0C  EC3C  F009         	call	_gpio_pin_write_logic	;wreg free
  1546   001A10  1635               	andwf	lcd_8bit_enable_signal@ret^0,f,c
  1547   001A12  0012               	return		;funcret
  1548   001A14                     __end_of_lcd_8bit_enable_signal:
  1549                           	callstack 0
  1550                           
  1551 ;; *************** function _button_initialize *****************
  1552 ;; Defined at:
  1553 ;;		line 4 in file "ECU/BUTTON/ecu_button.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  btn             1    6[COMRAM] PTR const struct .
  1556 ;;		 -> btn(3), 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  ret             1    0        unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      unsigned char 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1568 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;Total ram usage:        1 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 1
  1575 ;; This function calls:
  1576 ;;		_gpio_pin_direction_initialize
  1577 ;; This function is called by:
  1578 ;;		_ecu_initialization
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text10
  1583   001A14                     __ptext10:
  1584                           	callstack 0
  1585   001A14                     _button_initialize:
  1586                           	callstack 27
  1587   001A14                     
  1588                           ;ECU/BUTTON/ecu_button.c: 7:     if(((void*)0) == btn){
  1589   001A14  5033               	movf	button_initialize@btn^0,w,c
  1590   001A16  A4D8               	btfss	status,2,c
  1591   001A18  EF10  F00D         	goto	u1491
  1592   001A1C  EF12  F00D         	goto	u1490
  1593   001A20                     u1491:
  1594   001A20  EF14  F00D         	goto	l2139
  1595   001A24                     u1490:
  1596   001A24                     
  1597                           ;ECU/BUTTON/ecu_button.c: 9:     }
  1598   001A24  EF18  F00D         	goto	l9
  1599   001A28                     l2139:
  1600   001A28  C033  F02D         	movff	button_initialize@btn,gpio_pin_direction_initialize@_pin_config
  1601   001A2C  ECA9  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1602   001A30                     l9:
  1603   001A30  0012               	return		;funcret
  1604   001A32                     __end_of_button_initialize:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function _Relay_initialize *****************
  1608 ;; Defined at:
  1609 ;;		line 5 in file "ECU/Relay/ecu_relay.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  _relay          1   10[COMRAM] PTR struct .
  1612 ;;		 -> relay(1), 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  pin_config      1   11[COMRAM] struct .
  1615 ;;  ret             1    0        unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      unsigned char 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1625 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;Total ram usage:        2 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 2
  1632 ;; This function calls:
  1633 ;;		_Relay_Config
  1634 ;;		_gpio_pin_initialize
  1635 ;; This function is called by:
  1636 ;;		_ecu_initialization
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text11
  1641   001990                     __ptext11:
  1642                           	callstack 0
  1643   001990                     _Relay_initialize:
  1644                           	callstack 26
  1645   001990                     
  1646                           ;ECU/Relay/ecu_relay.c: 8:     if(((void*)0) == _relay){
  1647   001990  5037               	movf	Relay_initialize@_relay^0,w,c
  1648   001992  A4D8               	btfss	status,2,c
  1649   001994  EFCE  F00C         	goto	u1501
  1650   001998  EFD0  F00C         	goto	u1500
  1651   00199C                     u1501:
  1652   00199C  EFD2  F00C         	goto	l2147
  1653   0019A0                     u1500:
  1654   0019A0                     l2145:
  1655                           
  1656                           ;ECU/Relay/ecu_relay.c: 10:     }
  1657   0019A0  EFDE  F00C         	goto	l35
  1658   0019A4                     l2147:
  1659                           
  1660                           ;ECU/Relay/ecu_relay.c: 12:         pin_config_t pin_config;;ECU/Relay/ecu_relay.c: 13: 
      +                                  Relay_Config(&pin_config, _relay);
  1661   0019A4  0E38               	movlw	low Relay_initialize@pin_config
  1662   0019A6  6E2D               	movwf	Relay_Config@pin_config^0,c
  1663   0019A8  C037  F02E         	movff	Relay_initialize@_relay,Relay_Config@_relay
  1664   0019AC  EC29  F00C         	call	_Relay_Config	;wreg free
  1665   0019B0                     
  1666                           ;ECU/Relay/ecu_relay.c: 14:         gpio_pin_initialize(&pin_config);
  1667   0019B0  0E38               	movlw	low Relay_initialize@pin_config
  1668   0019B2  6E34               	movwf	gpio_pin_initialize@_pin_config^0,c
  1669   0019B4  EC43  F00B         	call	_gpio_pin_initialize	;wreg free
  1670   0019B8  EFD0  F00C         	goto	l2145
  1671   0019BC                     l35:
  1672   0019BC  0012               	return		;funcret
  1673   0019BE                     __end_of_Relay_initialize:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _gpio_pin_initialize *****************
  1677 ;; Defined at:
  1678 ;;		line 103 in file "MCAL/GPIO/hal_gpio.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  _pin_config     1    7[COMRAM] PTR const struct .
  1681 ;;		 -> lcd_8bit$data(8), lcd_8bit(10), Relay_initialize@pin_config(1), 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  ret             1    9[COMRAM] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      unsigned char 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1693 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;Total ram usage:        3 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 1
  1700 ;; This function calls:
  1701 ;;		_gpio_pin_direction_initialize
  1702 ;;		_gpio_pin_write_logic
  1703 ;; This function is called by:
  1704 ;;		_Relay_initialize
  1705 ;;		_lcd_8bit_initialize
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text12
  1710   001686                     __ptext12:
  1711                           	callstack 0
  1712   001686                     _gpio_pin_initialize:
  1713                           	callstack 26
  1714   001686                     
  1715                           ;MCAL/GPIO/hal_gpio.c: 106:     if((((void*)0) == _pin_config) || (7 < _pin_config->Pin)
      +                           || (4 < _pin_config->Port)){
  1716   001686  5034               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1717   001688  B4D8               	btfsc	status,2,c
  1718   00168A  EF49  F00B         	goto	u1431
  1719   00168E  EF4B  F00B         	goto	u1430
  1720   001692                     u1431:
  1721   001692  EF69  F00B         	goto	l2103
  1722   001696                     u1430:
  1723   001696  5034               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1724   001698  6ED9               	movwf	fsr2l,c
  1725   00169A  6ADA               	clrf	fsr2h,c
  1726   00169C  30DF               	rrcf	223,w,c
  1727   00169E  32E8               	rrcf	wreg,f,c
  1728   0016A0  32E8               	rrcf	wreg,f,c
  1729   0016A2  0B07               	andlw	7
  1730   0016A4  6E35               	movwf	??_gpio_pin_initialize^0,c
  1731   0016A6  0E08               	movlw	8
  1732   0016A8  6035               	cpfslt	??_gpio_pin_initialize^0,c
  1733   0016AA  EF59  F00B         	goto	u1441
  1734   0016AE  EF5B  F00B         	goto	u1440
  1735   0016B2                     u1441:
  1736   0016B2  EF69  F00B         	goto	l2103
  1737   0016B6                     u1440:
  1738   0016B6  5034               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1739   0016B8  6ED9               	movwf	fsr2l,c
  1740   0016BA  6ADA               	clrf	fsr2h,c
  1741   0016BC  50DF               	movf	223,w,c
  1742   0016BE  0B07               	andlw	7
  1743   0016C0  6E35               	movwf	??_gpio_pin_initialize^0,c
  1744   0016C2  0E04               	movlw	4
  1745   0016C4  6435               	cpfsgt	??_gpio_pin_initialize^0,c
  1746   0016C6  EF67  F00B         	goto	u1451
  1747   0016CA  EF69  F00B         	goto	u1450
  1748   0016CE                     u1451:
  1749   0016CE  EF6D  F00B         	goto	l2105
  1750   0016D2                     u1450:
  1751   0016D2                     l2103:
  1752                           
  1753                           ;MCAL/GPIO/hal_gpio.c: 107:         ret = (Std_ReturnType)1;
  1754   0016D2  0E01               	movlw	1
  1755   0016D4  6E36               	movwf	gpio_pin_initialize@ret^0,c
  1756                           
  1757                           ;MCAL/GPIO/hal_gpio.c: 108:     }
  1758   0016D6  EF7E  F00B         	goto	l2107
  1759   0016DA                     l2105:
  1760                           
  1761                           ;MCAL/GPIO/hal_gpio.c: 110:         ret = gpio_pin_direction_initialize(_pin_config);
  1762   0016DA  C034  F02D         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  1763   0016DE  ECA9  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1764   0016E2  6E36               	movwf	gpio_pin_initialize@ret^0,c
  1765                           
  1766                           ;MCAL/GPIO/hal_gpio.c: 111:         ret &= gpio_pin_write_logic(_pin_config, _pin_config
      +                          ->Logic);
  1767   0016E4  C034  F02D         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1768   0016E8  5034               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1769   0016EA  6ED9               	movwf	fsr2l,c
  1770   0016EC  6ADA               	clrf	fsr2h,c
  1771   0016EE  0E00               	movlw	0
  1772   0016F0  BEDF               	btfsc	indf2,7,c
  1773   0016F2  0E01               	movlw	1
  1774   0016F4  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1775   0016F6  EC3C  F009         	call	_gpio_pin_write_logic	;wreg free
  1776   0016FA  1636               	andwf	gpio_pin_initialize@ret^0,f,c
  1777   0016FC                     l2107:
  1778                           
  1779                           ;MCAL/GPIO/hal_gpio.c: 113:     return ret;
  1780   0016FC  5036               	movf	gpio_pin_initialize@ret^0,w,c
  1781   0016FE  0012               	return		;funcret
  1782   001700                     __end_of_gpio_pin_initialize:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _gpio_pin_direction_initialize *****************
  1786 ;; Defined at:
  1787 ;;		line 16 in file "MCAL/GPIO/hal_gpio.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1790 ;;		 -> lcd_8bit$data(8), lcd_8bit(10), btn(3), Relay_initialize@pin_config(1), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  ret             1    0        unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      unsigned char 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1802 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;Total ram usage:        6 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_button_initialize
  1812 ;;		_gpio_pin_initialize
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text13
  1817   001152                     __ptext13:
  1818                           	callstack 0
  1819   001152                     _gpio_pin_direction_initialize:
  1820                           	callstack 26
  1821   001152                     
  1822                           ;MCAL/GPIO/hal_gpio.c: 19:     if((((void*)0) == _pin_config) || (7 < _pin_config->Pin) 
      +                          || (4 < _pin_config->Port)){
  1823   001152  502D               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1824   001154  B4D8               	btfsc	status,2,c
  1825   001156  EFAF  F008         	goto	u1361
  1826   00115A  EFB1  F008         	goto	u1360
  1827   00115E                     u1361:
  1828   00115E  EFCF  F008         	goto	l2061
  1829   001162                     u1360:
  1830   001162  502D               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1831   001164  6ED9               	movwf	fsr2l,c
  1832   001166  6ADA               	clrf	fsr2h,c
  1833   001168  30DF               	rrcf	223,w,c
  1834   00116A  32E8               	rrcf	wreg,f,c
  1835   00116C  32E8               	rrcf	wreg,f,c
  1836   00116E  0B07               	andlw	7
  1837   001170  6E2E               	movwf	??_gpio_pin_direction_initialize^0,c
  1838   001172  0E08               	movlw	8
  1839   001174  602E               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1840   001176  EFBF  F008         	goto	u1371
  1841   00117A  EFC1  F008         	goto	u1370
  1842   00117E                     u1371:
  1843   00117E  EFCF  F008         	goto	l2061
  1844   001182                     u1370:
  1845   001182  502D               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1846   001184  6ED9               	movwf	fsr2l,c
  1847   001186  6ADA               	clrf	fsr2h,c
  1848   001188  50DF               	movf	223,w,c
  1849   00118A  0B07               	andlw	7
  1850   00118C  6E2E               	movwf	??_gpio_pin_direction_initialize^0,c
  1851   00118E  0E04               	movlw	4
  1852   001190  642E               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1853   001192  EFCD  F008         	goto	u1381
  1854   001196  EFCF  F008         	goto	u1380
  1855   00119A                     u1381:
  1856   00119A  EF24  F009         	goto	l2073
  1857   00119E                     u1380:
  1858   00119E                     l2061:
  1859                           
  1860                           ;MCAL/GPIO/hal_gpio.c: 21:     }
  1861   00119E  EF3A  F009         	goto	l2075
  1862   0011A2                     l2063:
  1863                           
  1864                           ;MCAL/GPIO/hal_gpio.c: 25:                 (*tris_registers[_pin_config->Port] |= ( 1 <<
      +                           _pin_config->Pin ));
  1865   0011A2  502D               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1866   0011A4  6ED9               	movwf	fsr2l,c
  1867   0011A6  6ADA               	clrf	fsr2h,c
  1868   0011A8  30DF               	rrcf	223,w,c
  1869   0011AA  32E8               	rrcf	wreg,f,c
  1870   0011AC  32E8               	rrcf	wreg,f,c
  1871   0011AE  0B07               	andlw	7
  1872   0011B0  6E2E               	movwf	??_gpio_pin_direction_initialize^0,c
  1873   0011B2  0E01               	movlw	1
  1874   0011B4  6E2F               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1875   0011B6  2A2E               	incf	??_gpio_pin_direction_initialize^0,f,c
  1876   0011B8  EFE0  F008         	goto	u1394
  1877   0011BC                     u1395:
  1878   0011BC  90D8               	bcf	status,0,c
  1879   0011BE  362F               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1880   0011C0                     u1394:
  1881   0011C0  2E2E               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1882   0011C2  EFDE  F008         	goto	u1395
  1883   0011C6  502D               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1884   0011C8  6ED9               	movwf	fsr2l,c
  1885   0011CA  6ADA               	clrf	fsr2h,c
  1886   0011CC  50DF               	movf	223,w,c
  1887   0011CE  0B07               	andlw	7
  1888   0011D0  0D02               	mullw	2
  1889   0011D2  50F3               	movf	243,w,c
  1890   0011D4  0F15               	addlw	low _tris_registers
  1891   0011D6  6ED9               	movwf	fsr2l,c
  1892   0011D8  6ADA               	clrf	fsr2h,c
  1893   0011DA  CFDE F030          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1894   0011DE  CFDD F031          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1895   0011E2  C030  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1896   0011E6  C031  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1897   0011EA  502F               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1898   0011EC  12DF               	iorwf	indf2,f,c
  1899   0011EE  EFCF  F008         	goto	l2061
  1900   0011F2                     l2067:
  1901                           
  1902                           ;MCAL/GPIO/hal_gpio.c: 29:                 (*tris_registers[_pin_config->Port] &= ~( 1 <
      +                          < _pin_config->Pin ));
  1903   0011F2  502D               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1904   0011F4  6ED9               	movwf	fsr2l,c
  1905   0011F6  6ADA               	clrf	fsr2h,c
  1906   0011F8  30DF               	rrcf	223,w,c
  1907   0011FA  32E8               	rrcf	wreg,f,c
  1908   0011FC  32E8               	rrcf	wreg,f,c
  1909   0011FE  0B07               	andlw	7
  1910   001200  6E2E               	movwf	??_gpio_pin_direction_initialize^0,c
  1911   001202  0E01               	movlw	1
  1912   001204  6E2F               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1913   001206  2A2E               	incf	??_gpio_pin_direction_initialize^0,f,c
  1914   001208  EF08  F009         	goto	u1404
  1915   00120C                     u1405:
  1916   00120C  90D8               	bcf	status,0,c
  1917   00120E  362F               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1918   001210                     u1404:
  1919   001210  2E2E               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1920   001212  EF06  F009         	goto	u1405
  1921   001216  502F               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1922   001218  0AFF               	xorlw	255
  1923   00121A  6E30               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1924   00121C  502D               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1925   00121E  6ED9               	movwf	fsr2l,c
  1926   001220  6ADA               	clrf	fsr2h,c
  1927   001222  50DF               	movf	223,w,c
  1928   001224  0B07               	andlw	7
  1929   001226  0D02               	mullw	2
  1930   001228  50F3               	movf	243,w,c
  1931   00122A  0F15               	addlw	low _tris_registers
  1932   00122C  6ED9               	movwf	fsr2l,c
  1933   00122E  6ADA               	clrf	fsr2h,c
  1934   001230  CFDE F031          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1935   001234  CFDD F032          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1936   001238  C031  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1937   00123C  C032  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1938   001240  5030               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1939   001242  16DF               	andwf	indf2,f,c
  1940   001244  EFCF  F008         	goto	l2061
  1941   001248                     l2073:
  1942   001248  502D               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1943   00124A  6ED9               	movwf	fsr2l,c
  1944   00124C  6ADA               	clrf	fsr2h,c
  1945   00124E  BCDF               	btfsc	indf2,6,c
  1946   001250  EF2C  F009         	goto	u1411
  1947   001254  EF2F  F009         	goto	u1410
  1948   001258                     u1411:
  1949   001258  0E01               	movlw	1
  1950   00125A  EF30  F009         	goto	u1416
  1951   00125E                     u1410:
  1952   00125E  0E00               	movlw	0
  1953   001260                     u1416:
  1954                           
  1955                           ; Switch size 1, requested type "simple"
  1956                           ; Number of cases is 2, Range of values is 0 to 1
  1957                           ; switch strategies available:
  1958                           ; Name         Instructions Cycles
  1959                           ; simple_byte            7     4 (average)
  1960                           ;	Chosen strategy is simple_byte
  1961   001260  0A00               	xorlw	0	; case 0
  1962   001262  B4D8               	btfsc	status,2,c
  1963   001264  EFF9  F008         	goto	l2067
  1964   001268  0A01               	xorlw	1	; case 1
  1965   00126A  B4D8               	btfsc	status,2,c
  1966   00126C  EFD1  F008         	goto	l2063
  1967   001270  EFCF  F008         	goto	l2061
  1968   001274                     l2075:
  1969                           
  1970                           ;MCAL/GPIO/hal_gpio.c: 36:     return ret;
  1971   001274  0E01               	movlw	1
  1972   001276  0012               	return		;funcret
  1973   001278                     __end_of_gpio_pin_direction_initialize:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function _button_read_status *****************
  1977 ;; Defined at:
  1978 ;;		line 17 in file "ECU/BUTTON/ecu_button.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  btn             1    6[COMRAM] PTR const struct .
  1981 ;;		 -> btn(3), 
  1982 ;;  btn_status      1    7[COMRAM] PTR enum E3041
  1983 ;;		 -> btn_last_status(1), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  pin_login_st    1    9[COMRAM] enum E3002
  1986 ;;  ret             1    0        unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      unsigned char 
  1989 ;; Registers used:
  1990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;Total ram usage:        4 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 1
  2003 ;; This function calls:
  2004 ;;		_gpio_pin_read_logic
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text14
  2011   001556                     __ptext14:
  2012                           	callstack 0
  2013   001556                     _button_read_status:
  2014                           	callstack 29
  2015   001556                     
  2016                           ;ECU/BUTTON/ecu_button.c: 20:     if((((void*)0) == btn) || (((void*)0) == btn_status)){
  2017   001556  5033               	movf	button_read_status@btn^0,w,c
  2018   001558  B4D8               	btfsc	status,2,c
  2019   00155A  EFB1  F00A         	goto	u1641
  2020   00155E  EFB3  F00A         	goto	u1640
  2021   001562                     u1641:
  2022   001562  EFBB  F00A         	goto	l2281
  2023   001566                     u1640:
  2024   001566  5034               	movf	button_read_status@btn_status^0,w,c
  2025   001568  A4D8               	btfss	status,2,c
  2026   00156A  EFB9  F00A         	goto	u1651
  2027   00156E  EFBB  F00A         	goto	u1650
  2028   001572                     u1651:
  2029   001572  EFBD  F00A         	goto	l2283
  2030   001576                     u1650:
  2031   001576                     l2281:
  2032                           
  2033                           ;ECU/BUTTON/ecu_button.c: 22:     }
  2034   001576  EFFE  F00A         	goto	l24
  2035   00157A                     l2283:
  2036                           
  2037                           ;ECU/BUTTON/ecu_button.c: 24:         logic_t pin_login_status = GPIO_LOW;
  2038   00157A  0E00               	movlw	0
  2039   00157C  6E36               	movwf	button_read_status@pin_login_status^0,c
  2040   00157E  C033  F02D         	movff	button_read_status@btn,gpio_pin_read_logic@_pin_config
  2041   001582  0E36               	movlw	low button_read_status@pin_login_status
  2042   001584  6E2E               	movwf	gpio_pin_read_logic@logic^0,c
  2043   001586  EC4F  F00A         	call	_gpio_pin_read_logic	;wreg free
  2044   00158A                     
  2045                           ;ECU/BUTTON/ecu_button.c: 26:         if(BUTTON_ACTIVE_HIGH == btn->button_active){
  2046   00158A  5033               	movf	button_read_status@btn^0,w,c
  2047   00158C  6ED9               	movwf	fsr2l,c
  2048   00158E  6ADA               	clrf	fsr2h,c
  2049   001590  0E02               	movlw	2
  2050   001592  26D9               	addwf	fsr2l,f,c
  2051   001594  04DE               	decf	postinc2,w,c
  2052   001596  A4D8               	btfss	status,2,c
  2053   001598  EFD0  F00A         	goto	u1661
  2054   00159C  EFD2  F00A         	goto	u1660
  2055   0015A0                     u1661:
  2056   0015A0  EFE7  F00A         	goto	l2297
  2057   0015A4                     u1660:
  2058   0015A4                     
  2059                           ;ECU/BUTTON/ecu_button.c: 27:             if(GPIO_HIGH == pin_login_status){
  2060   0015A4  0436               	decf	button_read_status@pin_login_status^0,w,c
  2061   0015A6  A4D8               	btfss	status,2,c
  2062   0015A8  EFD8  F00A         	goto	u1671
  2063   0015AC  EFDA  F00A         	goto	u1670
  2064   0015B0                     u1671:
  2065   0015B0  EFE1  F00A         	goto	l2293
  2066   0015B4                     u1670:
  2067   0015B4                     l2291:
  2068                           
  2069                           ;ECU/BUTTON/ecu_button.c: 28:                 *btn_status = BUTTON_PRESSED;
  2070   0015B4  5034               	movf	button_read_status@btn_status^0,w,c
  2071   0015B6  6ED9               	movwf	fsr2l,c
  2072   0015B8  6ADA               	clrf	fsr2h,c
  2073   0015BA  0E01               	movlw	1
  2074   0015BC  6EDF               	movwf	indf2,c
  2075                           
  2076                           ;ECU/BUTTON/ecu_button.c: 29:             }
  2077   0015BE  EFBB  F00A         	goto	l2281
  2078   0015C2                     l2293:
  2079                           
  2080                           ;ECU/BUTTON/ecu_button.c: 31:                 *btn_status = BUTTON_RELEASED;
  2081   0015C2  5034               	movf	button_read_status@btn_status^0,w,c
  2082   0015C4  6ED9               	movwf	fsr2l,c
  2083   0015C6  6ADA               	clrf	fsr2h,c
  2084   0015C8  6ADF               	clrf	indf2,c
  2085   0015CA  EFBB  F00A         	goto	l2281
  2086   0015CE                     l2297:
  2087   0015CE  5033               	movf	button_read_status@btn^0,w,c
  2088   0015D0  6ED9               	movwf	fsr2l,c
  2089   0015D2  6ADA               	clrf	fsr2h,c
  2090   0015D4  0E02               	movlw	2
  2091   0015D6  26D9               	addwf	fsr2l,f,c
  2092   0015D8  50DF               	movf	indf2,w,c
  2093   0015DA  A4D8               	btfss	status,2,c
  2094   0015DC  EFF2  F00A         	goto	u1681
  2095   0015E0  EFF4  F00A         	goto	u1680
  2096   0015E4                     u1681:
  2097   0015E4  EFFE  F00A         	goto	l19
  2098   0015E8                     u1680:
  2099   0015E8                     
  2100                           ;ECU/BUTTON/ecu_button.c: 37:             if(GPIO_HIGH == pin_login_status){
  2101   0015E8  0436               	decf	button_read_status@pin_login_status^0,w,c
  2102   0015EA  A4D8               	btfss	status,2,c
  2103   0015EC  EFFA  F00A         	goto	u1691
  2104   0015F0  EFFC  F00A         	goto	u1690
  2105   0015F4                     u1691:
  2106   0015F4  EFDA  F00A         	goto	l2291
  2107   0015F8                     u1690:
  2108   0015F8  EFE1  F00A         	goto	l2293
  2109   0015FC                     l19:
  2110   0015FC                     l24:
  2111   0015FC  0012               	return		;funcret
  2112   0015FE                     __end_of_button_read_status:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function _gpio_pin_read_logic *****************
  2116 ;; Defined at:
  2117 ;;		line 77 in file "MCAL/GPIO/hal_gpio.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2120 ;;		 -> btn(3), 
  2121 ;;  logic           1    1[COMRAM] PTR enum E3002
  2122 ;;		 -> button_read_status@pin_login_status(1), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  ret             1    0        unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      unsigned char 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;Total ram usage:        6 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_button_read_status
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text15
  2148   00149E                     __ptext15:
  2149                           	callstack 0
  2150   00149E                     _gpio_pin_read_logic:
  2151                           	callstack 29
  2152   00149E                     
  2153                           ;MCAL/GPIO/hal_gpio.c: 80:     if((((void*)0) == _pin_config)||(((void*)0) == logic) || 
      +                          (7 < _pin_config->Pin)||(4 < _pin_config->Port)){
  2154   00149E  502D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2155   0014A0  B4D8               	btfsc	status,2,c
  2156   0014A2  EF55  F00A         	goto	u1561
  2157   0014A6  EF57  F00A         	goto	u1560
  2158   0014AA                     u1561:
  2159   0014AA  EF7D  F00A         	goto	l2229
  2160   0014AE                     u1560:
  2161   0014AE  502E               	movf	gpio_pin_read_logic@logic^0,w,c
  2162   0014B0  B4D8               	btfsc	status,2,c
  2163   0014B2  EF5D  F00A         	goto	u1571
  2164   0014B6  EF5F  F00A         	goto	u1570
  2165   0014BA                     u1571:
  2166   0014BA  EF7D  F00A         	goto	l2229
  2167   0014BE                     u1570:
  2168   0014BE  502D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2169   0014C0  6ED9               	movwf	fsr2l,c
  2170   0014C2  6ADA               	clrf	fsr2h,c
  2171   0014C4  30DF               	rrcf	223,w,c
  2172   0014C6  32E8               	rrcf	wreg,f,c
  2173   0014C8  32E8               	rrcf	wreg,f,c
  2174   0014CA  0B07               	andlw	7
  2175   0014CC  6E2F               	movwf	??_gpio_pin_read_logic^0,c
  2176   0014CE  0E08               	movlw	8
  2177   0014D0  602F               	cpfslt	??_gpio_pin_read_logic^0,c
  2178   0014D2  EF6D  F00A         	goto	u1581
  2179   0014D6  EF6F  F00A         	goto	u1580
  2180   0014DA                     u1581:
  2181   0014DA  EF7D  F00A         	goto	l2229
  2182   0014DE                     u1580:
  2183   0014DE  502D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2184   0014E0  6ED9               	movwf	fsr2l,c
  2185   0014E2  6ADA               	clrf	fsr2h,c
  2186   0014E4  50DF               	movf	223,w,c
  2187   0014E6  0B07               	andlw	7
  2188   0014E8  6E2F               	movwf	??_gpio_pin_read_logic^0,c
  2189   0014EA  0E04               	movlw	4
  2190   0014EC  642F               	cpfsgt	??_gpio_pin_read_logic^0,c
  2191   0014EE  EF7B  F00A         	goto	u1591
  2192   0014F2  EF7D  F00A         	goto	u1590
  2193   0014F6                     u1591:
  2194   0014F6  EF7F  F00A         	goto	l2231
  2195   0014FA                     u1590:
  2196   0014FA                     l2229:
  2197                           
  2198                           ;MCAL/GPIO/hal_gpio.c: 82:     }
  2199   0014FA  EFA9  F00A         	goto	l2233
  2200   0014FE                     l2231:
  2201                           
  2202                           ;MCAL/GPIO/hal_gpio.c: 84:         *logic = (( *port_registers[_pin_config->Port] >> _pi
      +                          n_config->Pin ) & 1);
  2203   0014FE  502E               	movf	gpio_pin_read_logic@logic^0,w,c
  2204   001500  6ED9               	movwf	fsr2l,c
  2205   001502  6ADA               	clrf	fsr2h,c
  2206   001504  502D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2207   001506  6EE1               	movwf	fsr1l,c
  2208   001508  6AE2               	clrf	fsr1h,c
  2209   00150A  30E7               	rrcf	231,w,c
  2210   00150C  32E8               	rrcf	wreg,f,c
  2211   00150E  32E8               	rrcf	wreg,f,c
  2212   001510  0B07               	andlw	7
  2213   001512  6E2F               	movwf	??_gpio_pin_read_logic^0,c
  2214   001514  502D               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2215   001516  6EE1               	movwf	fsr1l,c
  2216   001518  6AE2               	clrf	fsr1h,c
  2217   00151A  50E7               	movf	231,w,c
  2218   00151C  0B07               	andlw	7
  2219   00151E  0D02               	mullw	2
  2220   001520  50F3               	movf	243,w,c
  2221   001522  0F0B               	addlw	low _port_registers
  2222   001524  6EE1               	movwf	fsr1l,c
  2223   001526  6AE2               	clrf	fsr1h,c
  2224   001528  CFE6 F030          	movff	postinc1,??_gpio_pin_read_logic+1
  2225   00152C  CFE5 F031          	movff	postdec1,??_gpio_pin_read_logic+2
  2226   001530  C030  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
  2227   001534  C031  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
  2228   001538  50E7               	movf	indf1,w,c
  2229   00153A  6E32               	movwf	(??_gpio_pin_read_logic+3)^0,c
  2230   00153C  2A2F               	incf	??_gpio_pin_read_logic^0,f,c
  2231   00153E  EFA3  F00A         	goto	u1604
  2232   001542                     u1605:
  2233   001542  90D8               	bcf	status,0,c
  2234   001544  3232               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
  2235   001546                     u1604:
  2236   001546  2E2F               	decfsz	??_gpio_pin_read_logic^0,f,c
  2237   001548  EFA1  F00A         	goto	u1605
  2238   00154C  5032               	movf	(??_gpio_pin_read_logic+3)^0,w,c
  2239   00154E  0B01               	andlw	1
  2240   001550  6EDF               	movwf	indf2,c
  2241   001552                     l2233:
  2242                           
  2243                           ;MCAL/GPIO/hal_gpio.c: 86:     return ret;
  2244   001552  0E01               	movlw	1
  2245   001554  0012               	return		;funcret
  2246   001556                     __end_of_gpio_pin_read_logic:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _Relay_Turn_On *****************
  2250 ;; Defined at:
  2251 ;;		line 21 in file "ECU/Relay/ecu_relay.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  _relay          1    7[COMRAM] PTR struct .
  2254 ;;		 -> relay(1), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  pin_config      1    8[COMRAM] struct .
  2257 ;;  ret             1    0        unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      unsigned char 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2267 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;Total ram usage:        2 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 1
  2274 ;; This function calls:
  2275 ;;		_Relay_Config
  2276 ;;		_gpio_pin_write_logic
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text16
  2283   0018FE                     __ptext16:
  2284                           	callstack 0
  2285   0018FE                     _Relay_Turn_On:
  2286                           	callstack 29
  2287   0018FE                     
  2288                           ;ECU/Relay/ecu_relay.c: 24:     if(((void*)0) == _relay){
  2289   0018FE  5034               	movf	Relay_Turn_On@_relay^0,w,c
  2290   001900  A4D8               	btfss	status,2,c
  2291   001902  EF85  F00C         	goto	u1701
  2292   001906  EF87  F00C         	goto	u1700
  2293   00190A                     u1701:
  2294   00190A  EF89  F00C         	goto	l2311
  2295   00190E                     u1700:
  2296   00190E                     l2309:
  2297                           
  2298                           ;ECU/Relay/ecu_relay.c: 26:     }
  2299   00190E  EF97  F00C         	goto	l40
  2300   001912                     l2311:
  2301                           
  2302                           ;ECU/Relay/ecu_relay.c: 28:         pin_config_t pin_config;;ECU/Relay/ecu_relay.c: 29: 
      +                                  Relay_Config(&pin_config, _relay);
  2303   001912  0E35               	movlw	low Relay_Turn_On@pin_config
  2304   001914  6E2D               	movwf	Relay_Config@pin_config^0,c
  2305   001916  C034  F02E         	movff	Relay_Turn_On@_relay,Relay_Config@_relay
  2306   00191A  EC29  F00C         	call	_Relay_Config	;wreg free
  2307   00191E                     
  2308                           ;ECU/Relay/ecu_relay.c: 30:         gpio_pin_write_logic(&pin_config, GPIO_HIGH);
  2309   00191E  0E35               	movlw	low Relay_Turn_On@pin_config
  2310   001920  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2311   001922  0E01               	movlw	1
  2312   001924  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  2313   001926  EC3C  F009         	call	_gpio_pin_write_logic	;wreg free
  2314   00192A  EF87  F00C         	goto	l2309
  2315   00192E                     l40:
  2316   00192E  0012               	return		;funcret
  2317   001930                     __end_of_Relay_Turn_On:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function _Relay_Turn_Off *****************
  2321 ;; Defined at:
  2322 ;;		line 36 in file "ECU/Relay/ecu_relay.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  _relay          1    7[COMRAM] PTR struct .
  2325 ;;		 -> relay(1), 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  pin_config      1    8[COMRAM] struct .
  2328 ;;  ret             1    0        unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      unsigned char 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;Total ram usage:        2 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 1
  2345 ;; This function calls:
  2346 ;;		_Relay_Config
  2347 ;;		_gpio_pin_write_logic
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text17
  2354   001930                     __ptext17:
  2355                           	callstack 0
  2356   001930                     _Relay_Turn_Off:
  2357                           	callstack 29
  2358   001930                     
  2359                           ;ECU/Relay/ecu_relay.c: 39:     if(((void*)0) == _relay){
  2360   001930  5034               	movf	Relay_Turn_Off@_relay^0,w,c
  2361   001932  A4D8               	btfss	status,2,c
  2362   001934  EF9E  F00C         	goto	u1711
  2363   001938  EFA0  F00C         	goto	u1710
  2364   00193C                     u1711:
  2365   00193C  EFA2  F00C         	goto	l2323
  2366   001940                     u1710:
  2367   001940                     l2321:
  2368                           
  2369                           ;ECU/Relay/ecu_relay.c: 41:     }
  2370   001940  EFB0  F00C         	goto	l45
  2371   001944                     l2323:
  2372                           
  2373                           ;ECU/Relay/ecu_relay.c: 43:         pin_config_t pin_config;;ECU/Relay/ecu_relay.c: 44: 
      +                                  Relay_Config(&pin_config, _relay);
  2374   001944  0E35               	movlw	low Relay_Turn_Off@pin_config
  2375   001946  6E2D               	movwf	Relay_Config@pin_config^0,c
  2376   001948  C034  F02E         	movff	Relay_Turn_Off@_relay,Relay_Config@_relay
  2377   00194C  EC29  F00C         	call	_Relay_Config	;wreg free
  2378   001950                     
  2379                           ;ECU/Relay/ecu_relay.c: 45:         gpio_pin_write_logic(&pin_config, GPIO_LOW);
  2380   001950  0E35               	movlw	low Relay_Turn_Off@pin_config
  2381   001952  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2382   001954  0E00               	movlw	0
  2383   001956  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  2384   001958  EC3C  F009         	call	_gpio_pin_write_logic	;wreg free
  2385   00195C  EFA0  F00C         	goto	l2321
  2386   001960                     l45:
  2387   001960  0012               	return		;funcret
  2388   001962                     __end_of_Relay_Turn_Off:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _gpio_pin_write_logic *****************
  2392 ;; Defined at:
  2393 ;;		line 53 in file "MCAL/GPIO/hal_gpio.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2396 ;;		 -> lcd_8bit$data(8), lcd_8bit(10), Relay_toggle@pin_config(1), Relay_Turn_Off@pin_config(1), 
  2397 ;;		 -> Relay_Turn_On@pin_config(1), Relay_initialize@pin_config(1), 
  2398 ;;  logic           1    1[COMRAM] enum E3002
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  ret             1    0        unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      unsigned char 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;Total ram usage:        7 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_Relay_Turn_On
  2420 ;;		_Relay_Turn_Off
  2421 ;;		_gpio_pin_initialize
  2422 ;;		_lcd_8bit_send_command
  2423 ;;		_lcd_8bit_send_char
  2424 ;;		_lcd_8bit_enable_signal
  2425 ;;		_Relay_toggle
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text18
  2430   001278                     __ptext18:
  2431                           	callstack 0
  2432   001278                     _gpio_pin_write_logic:
  2433                           	callstack 26
  2434   001278                     
  2435                           ;MCAL/GPIO/hal_gpio.c: 56:     if((((void*)0) == _pin_config) || (7 < _pin_config->Pin) 
      +                          || (4 < _pin_config->Port)){
  2436   001278  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2437   00127A  B4D8               	btfsc	status,2,c
  2438   00127C  EF42  F009         	goto	u1311
  2439   001280  EF44  F009         	goto	u1310
  2440   001284                     u1311:
  2441   001284  EF62  F009         	goto	l2033
  2442   001288                     u1310:
  2443   001288  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2444   00128A  6ED9               	movwf	fsr2l,c
  2445   00128C  6ADA               	clrf	fsr2h,c
  2446   00128E  30DF               	rrcf	223,w,c
  2447   001290  32E8               	rrcf	wreg,f,c
  2448   001292  32E8               	rrcf	wreg,f,c
  2449   001294  0B07               	andlw	7
  2450   001296  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  2451   001298  0E08               	movlw	8
  2452   00129A  602F               	cpfslt	??_gpio_pin_write_logic^0,c
  2453   00129C  EF52  F009         	goto	u1321
  2454   0012A0  EF54  F009         	goto	u1320
  2455   0012A4                     u1321:
  2456   0012A4  EF62  F009         	goto	l2033
  2457   0012A8                     u1320:
  2458   0012A8  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2459   0012AA  6ED9               	movwf	fsr2l,c
  2460   0012AC  6ADA               	clrf	fsr2h,c
  2461   0012AE  50DF               	movf	223,w,c
  2462   0012B0  0B07               	andlw	7
  2463   0012B2  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  2464   0012B4  0E04               	movlw	4
  2465   0012B6  642F               	cpfsgt	??_gpio_pin_write_logic^0,c
  2466   0012B8  EF60  F009         	goto	u1331
  2467   0012BC  EF62  F009         	goto	u1330
  2468   0012C0                     u1331:
  2469   0012C0  EFB7  F009         	goto	l2045
  2470   0012C4                     u1330:
  2471   0012C4                     l2033:
  2472                           
  2473                           ;MCAL/GPIO/hal_gpio.c: 58:     }
  2474   0012C4  EFCC  F009         	goto	l2047
  2475   0012C8                     l2035:
  2476                           
  2477                           ;MCAL/GPIO/hal_gpio.c: 62:                 (*lat_registers[_pin_config->Port] &= ~( 1 <<
      +                           _pin_config->Pin ));
  2478   0012C8  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2479   0012CA  6ED9               	movwf	fsr2l,c
  2480   0012CC  6ADA               	clrf	fsr2h,c
  2481   0012CE  30DF               	rrcf	223,w,c
  2482   0012D0  32E8               	rrcf	wreg,f,c
  2483   0012D2  32E8               	rrcf	wreg,f,c
  2484   0012D4  0B07               	andlw	7
  2485   0012D6  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  2486   0012D8  0E01               	movlw	1
  2487   0012DA  6E30               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2488   0012DC  2A2F               	incf	??_gpio_pin_write_logic^0,f,c
  2489   0012DE  EF73  F009         	goto	u1344
  2490   0012E2                     u1345:
  2491   0012E2  90D8               	bcf	status,0,c
  2492   0012E4  3630               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2493   0012E6                     u1344:
  2494   0012E6  2E2F               	decfsz	??_gpio_pin_write_logic^0,f,c
  2495   0012E8  EF71  F009         	goto	u1345
  2496   0012EC  5030               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2497   0012EE  0AFF               	xorlw	255
  2498   0012F0  6E31               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2499   0012F2  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2500   0012F4  6ED9               	movwf	fsr2l,c
  2501   0012F6  6ADA               	clrf	fsr2h,c
  2502   0012F8  50DF               	movf	223,w,c
  2503   0012FA  0B07               	andlw	7
  2504   0012FC  0D02               	mullw	2
  2505   0012FE  50F3               	movf	243,w,c
  2506   001300  0F01               	addlw	low _lat_registers
  2507   001302  6ED9               	movwf	fsr2l,c
  2508   001304  6ADA               	clrf	fsr2h,c
  2509   001306  CFDE F032          	movff	postinc2,??_gpio_pin_write_logic+3
  2510   00130A  CFDD F033          	movff	postdec2,??_gpio_pin_write_logic+4
  2511   00130E  C032  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2512   001312  C033  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2513   001316  5031               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2514   001318  16DF               	andwf	indf2,f,c
  2515   00131A  EF62  F009         	goto	l2033
  2516   00131E                     l2039:
  2517                           
  2518                           ;MCAL/GPIO/hal_gpio.c: 66:                 (*lat_registers[_pin_config->Port] |= ( 1 << 
      +                          _pin_config->Pin ));
  2519   00131E  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2520   001320  6ED9               	movwf	fsr2l,c
  2521   001322  6ADA               	clrf	fsr2h,c
  2522   001324  30DF               	rrcf	223,w,c
  2523   001326  32E8               	rrcf	wreg,f,c
  2524   001328  32E8               	rrcf	wreg,f,c
  2525   00132A  0B07               	andlw	7
  2526   00132C  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  2527   00132E  0E01               	movlw	1
  2528   001330  6E30               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2529   001332  2A2F               	incf	??_gpio_pin_write_logic^0,f,c
  2530   001334  EF9E  F009         	goto	u1354
  2531   001338                     u1355:
  2532   001338  90D8               	bcf	status,0,c
  2533   00133A  3630               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2534   00133C                     u1354:
  2535   00133C  2E2F               	decfsz	??_gpio_pin_write_logic^0,f,c
  2536   00133E  EF9C  F009         	goto	u1355
  2537   001342  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2538   001344  6ED9               	movwf	fsr2l,c
  2539   001346  6ADA               	clrf	fsr2h,c
  2540   001348  50DF               	movf	223,w,c
  2541   00134A  0B07               	andlw	7
  2542   00134C  0D02               	mullw	2
  2543   00134E  50F3               	movf	243,w,c
  2544   001350  0F01               	addlw	low _lat_registers
  2545   001352  6ED9               	movwf	fsr2l,c
  2546   001354  6ADA               	clrf	fsr2h,c
  2547   001356  CFDE F031          	movff	postinc2,??_gpio_pin_write_logic+2
  2548   00135A  CFDD F032          	movff	postdec2,??_gpio_pin_write_logic+3
  2549   00135E  C031  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2550   001362  C032  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2551   001366  5030               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2552   001368  12DF               	iorwf	indf2,f,c
  2553   00136A  EF62  F009         	goto	l2033
  2554   00136E                     l2045:
  2555   00136E  502E               	movf	gpio_pin_write_logic@logic^0,w,c
  2556   001370  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  2557   001372  6A30               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2558                           
  2559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2560                           ; Switch size 1, requested type "simple"
  2561                           ; Number of cases is 1, Range of values is 0 to 0
  2562                           ; switch strategies available:
  2563                           ; Name         Instructions Cycles
  2564                           ; simple_byte            4     3 (average)
  2565                           ;	Chosen strategy is simple_byte
  2566   001374  5030               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2567   001376  0A00               	xorlw	0	; case 0
  2568   001378  B4D8               	btfsc	status,2,c
  2569   00137A  EFC1  F009         	goto	l2477
  2570   00137E  EF62  F009         	goto	l2033
  2571   001382                     l2477:
  2572                           
  2573                           ; Switch size 1, requested type "simple"
  2574                           ; Number of cases is 2, Range of values is 0 to 1
  2575                           ; switch strategies available:
  2576                           ; Name         Instructions Cycles
  2577                           ; simple_byte            7     4 (average)
  2578                           ;	Chosen strategy is simple_byte
  2579   001382  502F               	movf	??_gpio_pin_write_logic^0,w,c
  2580   001384  0A00               	xorlw	0	; case 0
  2581   001386  B4D8               	btfsc	status,2,c
  2582   001388  EF64  F009         	goto	l2035
  2583   00138C  0A01               	xorlw	1	; case 1
  2584   00138E  B4D8               	btfsc	status,2,c
  2585   001390  EF8F  F009         	goto	l2039
  2586   001394  EF62  F009         	goto	l2033
  2587   001398                     l2047:
  2588                           
  2589                           ;MCAL/GPIO/hal_gpio.c: 73:     return ret;
  2590   001398  0E01               	movlw	1
  2591   00139A  0012               	return		;funcret
  2592   00139C                     __end_of_gpio_pin_write_logic:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _Relay_Config *****************
  2596 ;; Defined at:
  2597 ;;		line 97 in file "ECU/Relay/ecu_relay.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  pin_config      1    0[COMRAM] PTR struct .
  2600 ;;		 -> Relay_read_status@pin_config(1), Relay_toggle@pin_config(1), Relay_Turn_Off@pin_config(1), Relay_Turn_On@pin_con
      +fig(1), 
  2601 ;;		 -> Relay_initialize@pin_config(1), 
  2602 ;;  _relay          1    1[COMRAM] PTR struct .
  2603 ;;		 -> relay(1), 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;Total ram usage:        3 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_Relay_initialize
  2625 ;;		_Relay_Turn_On
  2626 ;;		_Relay_Turn_Off
  2627 ;;		_Relay_toggle
  2628 ;;		_Relay_read_status
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text19
  2633   001852                     __ptext19:
  2634                           	callstack 0
  2635   001852                     _Relay_Config:
  2636                           	callstack 27
  2637   001852                     
  2638                           ;ECU/Relay/ecu_relay.c: 97: static void Relay_Config(pin_config_t *pin_config, Relay_t *
      +                          _relay);ECU/Relay/ecu_relay.c: 98: {;ECU/Relay/ecu_relay.c: 99:     pin_config->Directio
      +                          n = GPIO_OUTPUT;
  2639   001852  502D               	movf	Relay_Config@pin_config^0,w,c
  2640   001854  6ED9               	movwf	fsr2l,c
  2641   001856  6ADA               	clrf	fsr2h,c
  2642   001858  9CDF               	bcf	indf2,6,c
  2643   00185A                     
  2644                           ;ECU/Relay/ecu_relay.c: 100:     pin_config->Logic = _relay->Status;
  2645   00185A  502E               	movf	Relay_Config@_relay^0,w,c
  2646   00185C  6ED9               	movwf	fsr2l,c
  2647   00185E  6ADA               	clrf	fsr2h,c
  2648   001860  502D               	movf	Relay_Config@pin_config^0,w,c
  2649   001862  6EE1               	movwf	fsr1l,c
  2650   001864  6AE2               	clrf	fsr1h,c
  2651   001866  9EE7               	bcf	indf1,7,c
  2652   001868  ACDF               	btfss	indf2,6,c
  2653   00186A  EF38  F00C         	goto	u1425
  2654   00186E  8EE7               	bsf	indf1,7,c
  2655   001870                     u1425:
  2656   001870                     
  2657                           ;ECU/Relay/ecu_relay.c: 101:     pin_config->Pin = _relay->Pin;
  2658   001870  502E               	movf	Relay_Config@_relay^0,w,c
  2659   001872  6ED9               	movwf	fsr2l,c
  2660   001874  6ADA               	clrf	fsr2h,c
  2661   001876  30DF               	rrcf	223,w,c
  2662   001878  32E8               	rrcf	wreg,f,c
  2663   00187A  32E8               	rrcf	wreg,f,c
  2664   00187C  0B07               	andlw	7
  2665   00187E  6E2F               	movwf	??_Relay_Config^0,c
  2666   001880  502D               	movf	Relay_Config@pin_config^0,w,c
  2667   001882  6ED9               	movwf	fsr2l,c
  2668   001884  6ADA               	clrf	fsr2h,c
  2669   001886  462F               	rlncf	??_Relay_Config^0,f,c
  2670   001888  462F               	rlncf	??_Relay_Config^0,f,c
  2671   00188A  462F               	rlncf	??_Relay_Config^0,f,c
  2672   00188C  50DF               	movf	223,w,c
  2673   00188E  182F               	xorwf	??_Relay_Config^0,w,c
  2674   001890  0BC7               	andlw	-57
  2675   001892  182F               	xorwf	??_Relay_Config^0,w,c
  2676   001894  6EDF               	movwf	223,c
  2677   001896                     
  2678                           ;ECU/Relay/ecu_relay.c: 102:     pin_config->Port = _relay->Port;
  2679   001896  502E               	movf	Relay_Config@_relay^0,w,c
  2680   001898  6ED9               	movwf	fsr2l,c
  2681   00189A  6ADA               	clrf	fsr2h,c
  2682   00189C  50DF               	movf	223,w,c
  2683   00189E  0B07               	andlw	7
  2684   0018A0  6E2F               	movwf	??_Relay_Config^0,c
  2685   0018A2  502D               	movf	Relay_Config@pin_config^0,w,c
  2686   0018A4  6ED9               	movwf	fsr2l,c
  2687   0018A6  6ADA               	clrf	fsr2h,c
  2688   0018A8  50DF               	movf	223,w,c
  2689   0018AA  182F               	xorwf	??_Relay_Config^0,w,c
  2690   0018AC  0BF8               	andlw	-8
  2691   0018AE  182F               	xorwf	??_Relay_Config^0,w,c
  2692   0018B0  6EDF               	movwf	223,c
  2693   0018B2  0012               	return		;funcret
  2694   0018B4                     __end_of_Relay_Config:
  2695                           	callstack 0
  2696                           
  2697                           	psect	rparam
  2698   000000                     tosu	equ	0xFFF
  2699                           tosh	equ	0xFFE
  2700                           tosl	equ	0xFFD
  2701                           stkptr	equ	0xFFC
  2702                           pclatu	equ	0xFFB
  2703                           pclath	equ	0xFFA
  2704                           pcl	equ	0xFF9
  2705                           tblptru	equ	0xFF8
  2706                           tblptrh	equ	0xFF7
  2707                           tblptrl	equ	0xFF6
  2708                           tablat	equ	0xFF5
  2709                           prodh	equ	0xFF4
  2710                           prodl	equ	0xFF3
  2711                           indf0	equ	0xFEF
  2712                           postinc0	equ	0xFEE
  2713                           postdec0	equ	0xFED
  2714                           preinc0	equ	0xFEC
  2715                           plusw0	equ	0xFEB
  2716                           fsr0h	equ	0xFEA
  2717                           fsr0l	equ	0xFE9
  2718                           wreg	equ	0xFE8
  2719                           indf1	equ	0xFE7
  2720                           postinc1	equ	0xFE6
  2721                           postdec1	equ	0xFE5
  2722                           preinc1	equ	0xFE4
  2723                           plusw1	equ	0xFE3
  2724                           fsr1h	equ	0xFE2
  2725                           fsr1l	equ	0xFE1
  2726                           bsr	equ	0xFE0
  2727                           indf2	equ	0xFDF
  2728                           postinc2	equ	0xFDE
  2729                           postdec2	equ	0xFDD
  2730                           preinc2	equ	0xFDC
  2731                           plusw2	equ	0xFDB
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        44
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      74
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    button_initialize@btn	PTR const struct . size(1) Largest target is 3
		 -> btn(COMRAM[3]), 

    button_read_status@btn	PTR const struct . size(1) Largest target is 3
		 -> btn(COMRAM[3]), 

    button_read_status@btn_status	PTR enum E3041 size(1) Largest target is 1
		 -> btn_last_status(COMRAM[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> btn(COMRAM[3]), lcd_8bit(COMRAM[10]), lcd_8bit$data(COMRAM[8]), Relay_initialize@pin_config(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_8bit(COMRAM[10]), lcd_8bit$data(COMRAM[8]), Relay_initialize@pin_config(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 3
		 -> btn(COMRAM[3]), 

    gpio_pin_read_logic@logic	PTR enum E3002 size(1) Largest target is 1
		 -> button_read_status@pin_login_status(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_8bit(COMRAM[10]), lcd_8bit$data(COMRAM[8]), Relay_initialize@pin_config(COMRAM[1]), Relay_toggle@pin_config(COMRAM[1]), 
		 -> Relay_Turn_Off@pin_config(COMRAM[1]), Relay_Turn_On@pin_config(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_8bit_enable_signal@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_8bit(COMRAM[10]), 

    lcd_8bit_initialize@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_8bit(COMRAM[10]), 

    lcd_8bit_send_char@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_8bit(COMRAM[10]), 

    lcd_8bit_send_command@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_8bit(COMRAM[10]), 

    lcd_8bit_send_string@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_8bit(COMRAM[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[8]), STR_2(CODE[12]), 

    lcd_8bit_send_string_pos@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_8bit(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[8]), STR_2(CODE[12]), 

    lcd_8bit_set_cursor@_lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_8bit(COMRAM[10]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    Relay_Config@_relay	PTR struct . size(1) Largest target is 1
		 -> relay(COMRAM[1]), 

    Relay_Config@pin_config	PTR struct . size(1) Largest target is 1
		 -> Relay_initialize@pin_config(COMRAM[1]), Relay_read_status@pin_config(COMRAM[1]), Relay_toggle@pin_config(COMRAM[1]), Relay_Turn_Off@pin_config(COMRAM[1]), 
		 -> Relay_Turn_On@pin_config(COMRAM[1]), 

    Relay_initialize@_relay	PTR struct . size(1) Largest target is 1
		 -> relay(COMRAM[1]), 

    Relay_Turn_Off@_relay	PTR struct . size(1) Largest target is 1
		 -> relay(COMRAM[1]), 

    Relay_Turn_On@_relay	PTR struct . size(1) Largest target is 1
		 -> relay(COMRAM[1]), 

    S999$buffer	PTR unsigned char  size(2) Largest target is 0

    S999$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_3(CODE[3]), STR_4(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_string_pos
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_send_char->_lcd_8bit_enable_signal
    _ecu_initialization->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_enable_signal
    _lcd_8bit_enable_signal->_gpio_pin_write_logic
    _button_initialize->_gpio_pin_direction_initialize
    _Relay_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _button_read_status->_gpio_pin_read_logic
    _Relay_Turn_On->_gpio_pin_write_logic
    _Relay_Turn_Off->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   52844
                                             24 COMRAM     2     2      0
                     _Relay_Turn_Off
                      _Relay_Turn_On
                 _button_read_status
                     _initialization
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   16973
                                             19 COMRAM     5     1      4
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3    9965
                                             15 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 3     1      2    6052
                                             15 COMRAM     3     1      2
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char                                   6     4      2    5674
                                              9 COMRAM     6     4      2
               _gpio_pin_write_logic
             _lcd_8bit_enable_signal
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0   18458
                 _ecu_initialization
 ---------------------------------------------------------------------------------
 (2) _ecu_initialization                                   0     0      0   18458
                   _Relay_initialize
                  _button_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  5     4      1   13072
                                             15 COMRAM     5     4      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2    9094
                                              9 COMRAM     6     4      2
               _gpio_pin_write_logic
             _lcd_8bit_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_enable_signal                               2     1      1    2532
                                              7 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _button_initialize                                    2     1      1     642
                                              6 COMRAM     1     0      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _Relay_initialize                                     3     2      1    4744
                                             10 COMRAM     2     1      1
                       _Relay_Config
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    3337
                                              7 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     474
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) _button_read_status                                   5     3      2    1017
                                              6 COMRAM     4     2      2
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     434
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Relay_Turn_On                                        3     2      1    3651
                                              7 COMRAM     2     1      1
                       _Relay_Config
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _Relay_Turn_Off                                       3     2      1    3651
                                              7 COMRAM     2     1      1
                       _Relay_Config
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    2274
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _Relay_Config                                         3     1      2    1117
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Relay_Turn_Off
     _Relay_Config
     _gpio_pin_write_logic
   _Relay_Turn_On
     _Relay_Config
     _gpio_pin_write_logic
   _button_read_status
     _gpio_pin_read_logic
   _initialization
     _ecu_initialization
       _Relay_initialize
         _Relay_Config
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _button_initialize
         _gpio_pin_direction_initialize
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_enable_signal
             _gpio_pin_write_logic
   _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char
         _gpio_pin_write_logic
         _lcd_8bit_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      4A       1       58.3%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      39        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 05 08:50:20 2024

                                       l9 1A30                __end_of_lcd_8bit_send_char 1774  
                                      l40 192E                                        l24 15FC  
                                      l19 15FC                                        l35 19BC  
                                      l45 1960                                        l62 18B2  
                                     l110 1276                                       l201 1016  
                                     l204 114A                                       l213 1A50  
                                     l150 16FE                                       l303 1684  
                                     l136 1554                                       l129 139A  
                                     l250 1772                                       l243 17E6  
                                     l236 149C                                       l318 1A4A  
                                     l263 1850                                       l268 18FC  
                                     l293 1A12                                       _btn 0029  
               ?_lcd_8bit_send_string_pos 0040                                       wreg 0FE8  
             __end_of_lcd_8bit_set_cursor 1686              __end_of_lcd_8bit_send_string 1852  
                                    l2101 16B6                                      l2031 12A8  
                                    l2103 16D2                                      l2111 1774  
                                    l2033 12C4                                      l2105 16DA  
                                    l2113 1784                                      l2201 1718  
                                    l2035 12C8                                      l2027 1278  
                                    l2107 16FC                                      l2123 179E  
                                    l2131 17E4                                      l2115 178C  
                                    l2211 1756                                      l2203 1726  
                                    l2045 136E                                      l2029 1288  
                                    l2221 149E                                      l2061 119E  
                                    l2125 17CA                                      l2117 179A  
                                    l2213 1758                                      l2039 131E  
                                    l2047 1398                                      l2311 1912  
                                    l2231 14FE                                      l2223 14AE  
                                    l2063 11A2                                      l2055 1152  
                                    l2143 1990                                      l2135 1A14  
                                    l2127 17CC                                      l2215 1768  
                                    l2321 1940                                      l2313 191E  
                                    l2233 1552                                      l2225 14BE  
                                    l2073 1248                                      l2057 1162  
                                    l2145 19A0                                      l2137 1A24  
                                    l2081 19EE                                      l2129 17DC  
                                    l2161 13C4                                      l2209 172A  
                                    l2217 1770                                      l2241 15FE  
                                    l2401 1046                                      l2091 185A  
                                    l2323 1944                                      l2307 18FE  
                                    l2227 14DE                                      l2067 11F2  
                                    l2075 1274                                      l2059 1182  
                                    l2147 19A4                                      l2139 1A28  
                                    l2083 19FC                                      l2171 13D8  
                                    l2155 139C                                      l2331 1A4C  
                                    l2251 1640                                      l2243 15FE  
                                    l2411 1076                                      l2403 104A  
                                    l2093 1870                                      l2325 1950  
                                    l2309 190E                                      l2229 14FA  
                                    l2149 19B0                                      l2085 1A04  
                                    l2181 143A                                      l2173 13E8  
                                    l2157 13AC                                      l2237 1A32  
                                    l2261 17E8                                      l2253 1654  
                                    l2245 1604                                      l2341 18EE  
                                    l2333 18B4                                      l2421 10C6  
                                    l2413 1082                                      l2405 105A  
                                    l2095 1896                                      l2319 1930  
                                    l2079 19EA                                      l2191 1480  
                                    l2183 1448                                      l2175 1400  
                                    l2167 13C8                                      l2159 13B0  
                                    l2239 1A42                                      l2263 17FC  
                                    l2271 1830                                      l2247 1618  
                                    l2255 165C                                      l2335 18C8  
                                    l2431 1112                                      l2423 10DE  
                                    l2415 108E                                      l2407 106A  
                                    l2089 1852                                      l2281 1576  
                                    l2097 1686                                      l2193 148E  
                                    l2185 1456                                      l2177 140E  
                                    l2169 13D6                                      l2273 184E  
                                    l2265 180C                                      l2249 162C  
                                    l2257 1682                                      l2337 18D8  
                                    l2433 111A                                      l2417 10A2  
                                    l2409 106E                                      l2425 10EE  
                                    l2291 15B4                                      l2283 157A  
                                    l2099 1696                                      l2187 1464  
                                    l2179 142A                                      l2267 1814  
                                    l2339 18DC                                      l2435 1126  
                                    l2427 10FE                                      l2419 10BA  
                                    l2293 15C2                                      l2285 157E  
                                    l2277 1556                                      l2189 1472  
                                    l2197 1700                                      l2269 182E  
                                    l2437 1132                                      l2429 110E  
                                    l2287 158A                                      l2279 1566  
                                    l2199 1710                                      l2391 1012  
                                    l2289 15A4                                      l2297 15CE  
                                    l2393 1022                                      l2299 15E8  
                                    l2395 1032                                      l2477 1382  
                                    l2399 1034                                      STR_1 1005  
                                    STR_2 1001                                      STR_3 100D  
                                    u1310 1288                                      u1311 1284  
                                    u1320 12A8                                      u1321 12A4  
                                    u1330 12C4                                      u1410 125E  
                                    u1331 12C0                                      u1411 1258  
                                    u1404 1210                                      u1500 19A0  
                                    u1405 120C                                      u1501 199C  
                                    _LATA 0F89                                      u1430 1696  
                                    u1510 13AC                                      _LATB 0F8A  
                                    u1431 1692                                      u1511 13A8  
                                    _LATC 0F8B                                      u1344 12E6  
                                    u1416 1260                                      u1360 1162  
                                    u1440 16B6                                      u1520 13E8  
                                    _LATD 0F8C                                      u1425 1870  
                                    u1345 12E2                                      u1361 115E  
                                    u1441 16B2                                      u1521 13E4  
                                    _LATE 0F8D                                      u1354 133C  
                                    u1370 1182                                      u1450 16D2  
                                    u1530 1710                                      u1610 17FC  
                                    u1355 1338                                      u1371 117E  
                                    u1451 16CE                                      u1531 170C  
                                    u1611 17F8                                      u1700 190E  
                                    u1604 1546                                      u1380 119E  
                                    u1460 1784                                      u1620 180C  
                                    u1701 190A                                      u1605 1542  
                                    u1381 119A                                      u1461 1780  
                                    u1621 1808                                      u1710 1940  
                                    u1550 1768                                      u1630 184E  
                                    u1711 193C                                      u1551 1764  
                                    u1631 184A                                      u1560 14AE  
                                    u1640 1566                                      u1480 17DC  
                                    u1544 1744                                      u1720 18C8  
                                    u1800 1032                                      u1561 14AA  
                                    u1641 1562                                      u1481 17D8  
                                    u1545 1740                                      u1721 18C4  
                                    u1801 102E                                      u1570 14BE  
                                    u1650 1576                                      u1394 11C0  
                                    u1490 1A24                                      u1474 17B8  
                                    u1730 18D8                                      u1810 1046  
                                    u1571 14BA                                      u1651 1572  
                                    u1395 11BC                                      u1491 1A20  
                                    u1475 17B4                                      u1731 18D4  
                                    u1811 1042                                      u1580 14DE  
                                    u1660 15A4                                      u1820 105A  
                                    u1581 14DA                                      u1661 15A0  
                                    u1821 1056                                      u1590 14FA  
                                    u1670 15B4                                      u1830 106A  
                                    u1591 14F6                                      u1671 15B0  
                                    u1831 1066                                      u1680 15E8  
                                    u1840 10FE                                      u1681 15E4  
                                    u1841 10FA                                      u1690 15F8  
                                    u1850 110E                                      u1691 15F4  
                                    u1851 110A                                      u1907 10D0  
                                    u1917 13F2                                      u1927 1414  
                                    u1937 1430                                      u1947 19FE  
                                    u1897 10AC                          ??_initialization 0041  
          gpio_pin_read_logic@_pin_config 002D                                      _flag 0048  
                                    _main 1012                __end_of_button_read_status 15FE  
                                    fsr1h 0FE2                                      fsr2h 0FDA  
                                    indf1 0FE7                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0000  
           __end_of_lcd_8bit_send_command 17E8                              ___param_bank 0000  
                    _gpio_pin_write_logic 1278                                     ?_main 002D  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                                   _relay 002C                                     tablat 0FF5  
                                   status 0FD8            ?_gpio_pin_direction_initialize 002D  
                         __initialization 1962                              __end_of_main 1152  
                   ?_gpio_pin_write_logic 002D                    lcd_8bit_set_cursor@ret 003F  
                  lcd_8bit_set_cursor@row 003D                  gpio_pin_read_logic@logic 002E  
                           _lat_registers 0001                                    ??_main 0045  
                           __activetblptr 0003                         _button_initialize 1A14  
                      ?_button_initialize 0033                          _btn_valid_status 0049  
                        ??_Relay_Turn_Off 0035                       ??_button_initialize 0034  
                    _lcd_8bit_send_string 17E8                                    isa$std 0001  
             lcd_8bit_send_string_pos@ret 0044               lcd_8bit_send_string_pos@row 0042  
             lcd_8bit_send_string_pos@str 0041                             ?_Relay_Config 002D  
              Relay_initialize@pin_config 0038                        Relay_Config@_relay 002E  
                            __pdataCOMRAM 0001                 __end_of_button_initialize 1A32  
                            __mediumconst 0000                   ?_lcd_8bit_enable_signal 0034  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                lcd_8bit_send_command@count 003B  
                              __accesstop 0080                   __end_of__initialization 198A  
                           ___rparam_used 0001                    ??_gpio_pin_write_logic 002F  
                          __pcstackCOMRAM 002D                      button_initialize@btn 0033  
                   ?_lcd_8bit_send_string 003C                            ??_Relay_Config 002F  
gpio_pin_direction_initialize@_pin_config 002D                   lcd_8bit_set_cursor@_lcd 003C  
          __end_of_lcd_8bit_enable_signal 1A14                       Relay_Turn_On@_relay 0034  
                      _lcd_8bit_send_char 1700                       ?_lcd_8bit_send_char 0036  
                lcd_8bit_initialize@count 003F                    lcd_8bit_initialize@ret 0040  
                      _counter_debouncing 0047                        _button_read_status 1556  
                    ??_lcd_8bit_send_char 0038                       ?_button_read_status 0033  
                  Relay_initialize@_relay 0037                            _tris_registers 0015  
                    ??_button_read_status 0035                                   __Hparam 0000  
                                 __Lparam 0000                          _Relay_initialize 1990  
                  ??_lcd_8bit_send_string 003E                       _gpio_pin_initialize 1686  
                   _lcd_8bit_send_command 1774                             _Relay_Turn_On 18FE  
                     _gpio_pin_read_logic 149E                              __psmallconst 1000  
                                 __pcinit 1962                                   __ramtop 1000  
                _lcd_8bit_send_string_pos 18B4                                   __ptext0 1012  
                                 __ptext1 18B4                                   __ptext2 15FE  
                                 __ptext3 17E8                                   __ptext4 1700  
                                 __ptext5 1A4C                                   __ptext6 1A32  
                                 __ptext7 139C                                   __ptext8 1774  
                                 __ptext9 19EA           ??_gpio_pin_direction_initialize 002E  
                    ?_gpio_pin_initialize 0034                      ?_gpio_pin_read_logic 002D  
            lcd_8bit_send_string_pos@_lcd 0040                      end_of_initialization 198A  
                    __end_of_Relay_Config 18B4                            ?_Relay_Turn_On 0034  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc1 0FE6  
                                 postinc2 0FDE                 lcd_8bit_enable_signal@ret 0035  
                   ??_gpio_pin_initialize 0035                     ??_gpio_pin_read_logic 002F  
              __end_of_ecu_initialization 1A4C                    ?_lcd_8bit_send_command 0036  
              lcd_8bit_enable_signal@_lcd 0034            lcd_8bit_send_string_pos@column 0043  
                           __pidataCOMRAM 19BE                       start_initialization 1962  
                     _lcd_8bit_initialize 139C     __end_of_gpio_pin_direction_initialize 1278  
           _gpio_pin_direction_initialize 1152                           ??_Relay_Turn_On 0035  
                    ?_lcd_8bit_initialize 003C                      Relay_Turn_Off@_relay 0034  
                     _lcd_8bit_set_cursor 15FE              button_read_status@btn_status 0034  
                lcd_8bit_send_command@ret 003A                               __pbssCOMRAM 0047  
                __end_of_Relay_initialize 19BE                      ?_lcd_8bit_set_cursor 003C  
                 lcd_8bit_initialize@_lcd 003C                     ??_lcd_8bit_initialize 003D  
              ??_lcd_8bit_send_string_pos 0044           gpio_pin_write_logic@_pin_config 002D  
                          _initialization 1A4C                 gpio_pin_write_logic@logic 002E  
                             __smallconst 1000                              _Relay_Config 1852  
                   button_read_status@btn 0033                    Relay_Config@pin_config 002D  
                   ??_lcd_8bit_set_cursor 003F                    __end_of_initialization 1A52  
                ??_lcd_8bit_enable_signal 0035                   lcd_8bit_send_char@count 003B  
                  gpio_pin_initialize@ret 0036                 lcd_8bit_set_cursor@column 003E  
                               copy_data0 1976                   ??_lcd_8bit_send_command 0038  
                Relay_Turn_Off@pin_config 0035                                  __Hrparam 0000  
                         ?_initialization 002D                                  __Lrparam 0000  
                          _Relay_Turn_Off 1930               __end_of_gpio_pin_initialize 1700  
             __end_of_gpio_pin_read_logic 1556                        _ecu_initialization 1A32  
          gpio_pin_initialize@_pin_config 0034                 lcd_8bit_send_command@_lcd 0036  
                                _lcd_8bit 001F                                  __ptext10 1A14  
                                __ptext11 1990                                  __ptext12 1686  
                                __ptext13 1152                                  __ptext14 1556  
                                __ptext15 149E                                  __ptext16 18FE  
                                __ptext17 1930                                  __ptext18 1278  
                                __ptext19 1852                       ?_ecu_initialization 002D  
      button_read_status@pin_login_status 0036          __end_of_lcd_8bit_send_string_pos 18FE  
                                isa$xinst 0000                      ??_ecu_initialization 0041  
                  lcd_8bit_send_char@_lcd 0036                    lcd_8bit_send_char@data 0037  
                  __end_of_Relay_Turn_Off 1962                   Relay_Turn_On@pin_config 0035  
                       ?_Relay_initialize 0037              __end_of_gpio_pin_write_logic 139C  
                      ??_Relay_initialize 0038                     __end_of_Relay_Turn_On 1930  
                   lcd_8bit_send_char@ret 003A                           ?_Relay_Turn_Off 0034  
                lcd_8bit_send_string@_lcd 003C                            _port_registers 000B  
                 lcd_8bit_send_string@ret 003E                   lcd_8bit_send_string@str 003D  
                         _btn_last_status 004A                    _lcd_8bit_enable_signal 19EA  
             __end_of_lcd_8bit_initialize 149E              lcd_8bit_send_command@command 0037  
